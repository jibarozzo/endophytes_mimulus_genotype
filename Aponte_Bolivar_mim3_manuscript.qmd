---
title: "Yellow monkeyflower genotype and phenotype interactions with foliar fungal symbionts in common gardens"
date: last-modified
date-format: "MMMM D, YYYY"
bibliography: references.bib
csl: apa.csl
author:
  - name: Bolívar Aponte Rolón
    orcid: 0000-0002-2544-4551
    email: baponterolon@tulane.edu
    corresponding: true
    affiliations: 
      - ref: tu
        name: Tulane University
        department: Ecology and Evolutionary Biology
        city: New Orleans
        state: LA
        country: US
        url: www.tulane.edu
  - name: Kathleen G. Ferris
    email: kferris@tulane.edu
    corresponding: false
    affiliations: 
      - ref: tu
  - name: Sunshine A. Van Bael
    orcid: 0000-0001-7317-3533
    email: svanbael@tulane.edu
    corresponding: false
    affiliation: 
      - ref: tu
      
affiliations:
  - id: tu
    name: Department of Ecology and Evolutionary Biology, Tulane University, 6823 St. Charles Avenue, New Orleans, LA 70118

filters:
  - authors-block

format:
  # pdf:
  #   documentclass: scrartcl
  #   include-in-header:
  #       text: '\usepackage{lineno}\linenumbers'
  #   linestretch: 2.0
  #   margin-left: 1in
  #   margin-right: 1in
  #   margin-top: 1in
  #   margin-bottom: 1in
  #   mainfont: TeX Gyre Termes #Alternative to Times New Roman
  #   sansfont: TeX Gyre Termes #Another option is Liberation Serif
  #   number-sections: true
  #   citation-package: biblatex
  #   #keep_tex: true
  #   keep_md: true
  docx:
    reference-doc: custom-reference-doc.docx
    number-sections: true
    tbl-colwidths: true
    #linestretch: 2.0
    citation-package: biblatex
crossref:
  custom:
    - kind: float
      key: suppfig
      latex-env: suppfig
      reference-prefix: Fig. S
      space-before-numbering: false
      latex-list-of-description: Supplementary Figure
    
editor: source
execute:
  echo: false
warning: false
---

```{r, cleaning_shaping_data}
#| echo: false
#| eval: true
#| tidy: true

# Core packages
library("tidyverse")
library("data.table")
library("ggpubr")
library("ggfortify")
library("rstatix")
library("broom")
library("readxl")

# Linear Models
library("car")
library("nlme")
library("MASS")
library("MuMIn")
library("sjPlot")
#library("class")
#library("caret")

# Community Diversity
library("vegan")
library("hillR")
library("geosphere")
library("indicspecies")

# ggplot2 extensions
library("ggtext")
library("ggpmisc")
library("MetBrewer")
library("ggrepel")

# Tables
library("huxtable")
library("flextable")
library("broom.mixed")
library("officer")
library("knitr")

# Maps
library("ggmap")
library("ggspatial")

# Phyloseq friendly
#Some of these are redundant and have conflicts, but have functions that I like better than others or compliment each other.
library("phyloseq")
library("microeco") # New package for microbial analyses
library("file2meco") # File to microeco (phyloseq friendly)
library("metagMisc") # Miscellaneous functions
library("microbiome") # Expands phyloseq 
library("mirlyn")

# Parallel processing
library("parallelly")

# Misc
library("conflicted")
conflict_prefer("select", "dplyr")
conflict_prefer("desc", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("alpha", "ggplot2")


# File path


path <- "../mim3_bioinformatics" # Change accordingly


# We will load the data sets and phyloseq objects here.
#### Load leaf traits master files ####
traits <-
  read_excel(
    file.path(
      path,
      "field_data/Mimulus_CH3_Endophytes_ReciprocalTransplant_2023.xlsx"
    ),
    sheet = "CH3_Leaf_traits"
  ) # Main raw data set
leaf_traits <- 
  readRDS(file.path(path, "clean_data/statistics/leaf_traits.rds"))
plant_traits <-
  readRDS(file.path(path, "clean_data/statistics/plant_traits.rds"))
plant_traits_rfy <-
  readRDS(file.path(path, "clean_data/statistics/plant_traits_rarefied.rds")) #Substitues ps_melt df


#### Phyloseq objects ####
#Phyloseq joins various objects that we have already prepare: taxonomic table, ASV table and our sample data.
#These are the data frames resulting from the phyloseq section in mim2_bioinformatics.qmd notebook.


#Load Phyloseq object cleaned of singletons (552 ASVs)
ps_clean_3 <-
  readRDS(file.path(
    path,
    "clean_data/taxonomy/ASV_8859_v2_phyloseq_nonsingletons.rds"
  ))
pseq_rrfa <-
  readRDS(file.path(path, "clean_data/statistics/pseq_rrfa.rds")) #Mirlyn object from Method B
rarefied_phyloseq <-
  readRDS(file.path(path, "clean_data/statistics/rarefied_phyloseq.rds"))

# Load ps_melt
#ps_melt <- readRDS(file.path(path, "clean_data/statistics/ps_melt.rds"))

#### Matrices ####
# Initial matrices, before rarefaction
# ASV abundance matrix
# Select randomized samples for beta diversity rarefaction
# A total of 282 samples
final_names_methodA <- sample_names(pseq_rrfa[[1]]) # Sample names

# # Matrix
# Simple Matrix of 84 samples from Method B pipeline
asv_matrix <- otu_table(ps_clean_3) |> # ASV matrix
  as.data.frame() |>
  select(contains(final_names_methodA)) |> # Samples from method B randomization
  as.matrix()

# Load rarefied matrix
rrfy_hell_matrix <-
  readRDS("clean_data/statistics/rrfy_hell_matrix.rds")

# Mean Hellinger transformation of rarefied data sets
# For Mantel tests
# set.seed(433)
# asv_avgdist <- avgdist(t(asv_matrix),
#                        sample = 750,
#                        distfun = vegdist,
#                        dmethod = "hellinger", #Transformation, later Bray_Curtis
#                        meanfun = mean,
#                        iterations = 50) |>
#   as.matrix()
#
# # Save
# saveRDS(asv_avgdist, file = "clean_data/statistics/asv_avgdist.rds")

# Load
asv_avgdist <- readRDS("clean_data/statistics/asv_avgdist.rds")


# Traits for dbRDA
dbrda_hell_matrix <- rrfy_hell_matrix |>
  column_to_rownames(var = "X") |>
  select(-c(1, 2:17))

dbrda_traits <- rrfy_hell_matrix |>
  select(X, Unique_ID, Site, Habitat, Genotype, logLBI) |>
  unite(Habitat_Genotype,
        Habitat,
        Genotype,
        sep = "_",
        remove = FALSE)


# Functions
source(file.path(path, "functions/alpha_rfy.R"))
source(file.path(path, "functions/pval_format.R"))

# Comparisons
my_comparisons <- list(
  c("F2LG", "L"),
  c("F2LG", "G"),
  c("F2GL", "L"),
  c("F2GL", "G"),
  c("G", "L"),
  c("F2GL", "F2LG")
)
my_comparisons2 <-
  list(c("Meadow 2", "Meadow 1"),
       c("Meadow 2", "Granite 1"),
       c("Meadow 1", "Granite 1"))

# List of ASV samples
names_list <- colnames(ps_clean_3@otu_table) #List of samples
```

## Keywords

# Abstract

# Introduction

Evolutionary dynamics are significantly shaped by phenotypic plasticity and genetic adaptation, with both mechanisms playing crucial roles in facilitating plant survival and adaptation to a changing climate [@jump2005; @franks2014]. The effect of climate change on plastic and evolutionary responses is evident and accelerating [@franks2014; @ipcc2023]. While phenotypic plasticity and genetic adaptation are predicted to mitigate some of the effects of climate change, evidence supports that the rate of evolution may not keep pace, leading to the extinction of species [@urban2014]. The diversity and distribution of plants will be affected, resulting in "winners" and "losers" that are optimally or ill-adapted to an uncertain climate future [@pecl2017]. Local adaptation, genetic variation and phenotypic plasticity have been extensively studied in the context of spatial and temporal changes, but the role of symbiotic relationships in plant adaptation and phenotypic plasticity is less understood [@peay2016; @kivlin2022; @mojica2012; @hawkes2021]. Plants' ability to adapt to novel environments has been facilitated by their symbiotic relationships with fungi and bacteria [reviewed in @peay2016; @remy1994]. The potential for fungi to enhance plant fitness is vast, from colonization of land by plants in consort with arbuscular mycorrhizal root mutualists aiding in nutrient acquisition [peay2016; @remy1994], to the benefits fungal symbionts provide against pathogen resistance [@mejia2008; @estrada2013; @rasmussen2008; @clay1996], and stress tolerance [@peay2016; @giauque2019]. Nonetheless, the potential benefits are contingent on host plant identity, genetics, ecotypes, and the fungal functional guilds present [@kivlin2022; @kivlin2019; @mcintosh2024]. 

The phyllosphere is comprised of bacterial and fungal symbionts on the surface and inside leaf tissue. Foliar endophytic fungi (FEF) refer to a diverse group that lives *within* leaves [@arnold2007]. They are mostly asymptomatic but are known to alter plants' response to stressful environments, such as drought [@giauque2019; @giauque2013; @aimone2023], herbivory [@mejia2008; @rocha2017; @albrectsen2010], and pathogen damage [@mejia2014; @busby2016; @rondot2019]. The phyllosphere and rhizosphere can effectively expand the host plants' phenotype through genetic and metabolic pathways [reviewed in @hawkes2021; @kaddes2019]. In turn, host phenotype and genetics shape the phyllosphere [@tellezTraits2022; @kivlin2022; @vanwallendael2022; @horton2014] to such degree that host genetics can predict rhizosphere communities [@horton2014; @deng2021]. The microbial composition of the phyllosphere can also be altered throughout the growing season due to host genetics [@vanwallendael2022]. A significant portion of our knowledge about the affinity of FEF communities to host genetics comes from studies focused on vertically transmitted endophytes (transferred from parent to offspring, e.g., *Epiclhöe* spp.) and horizontally transmitted endophytes (acquired from the environment, e.g., *Cladosporium* spp.) in grasses [@mathew2023; @song2016; @clay1996; @ranelli2015]. Concurrently, other studies focused on how leaf traits (e.g., leaf mass per area, leaf shape) along a growth versus persistence gradient in tropical trees can influence FEF colonization [@tellezTraits2022; @kitajima2013; @poorter2006; @wright2004]. This has enabled a deeper understanding of how leaf traits function as filters that can shape susceptibility to FEF colonization, but the role FEF plays in the local adaptation and phenotypic plasticity of their hosts is less clear [@cordovez2019] due to work on non-model systems. The ability to have a genetic adaptation or plastic response that increases the potential for establishing beneficial symbionts, above or below-ground, can be crucial for plant survival and adaptation to changing environments. Studying the interaction between plant genotype and phenotype with FEF communities is essential in the fields of ecology and evolutionary biology.

The *Mimulus guttatus* species complex is an ideal system to study interactions between leaf phenotype, host genetics, and FEF communities [@twyford2015; @wu2008]. It comprises about a dozen closely related species [@coughlan2021; @wu2008], where two interfertile species, *M. guttatus* and *M. laciniatus*, exhibit strong differences in leaf morphology controlled by overlapping genetic regions, suggesting that large-effect loci underlie this trait [@ferris2015]. Additionally, the contrasting habitats of *M. guttatus* (moist seeps) and *M. laciniatus* (granite outcrops) throughout the Sierra Nevada mountain range in California provide an opportunity to explore the role of leaf phenotype and host genetics in conforming the diversity and structure of FEF communities [@tataru2023]. Through a genome-wide association study (GWAS), Deng et al., [-@deng2021] showed how the bacterial rhizosphere of *Sorghum bicolor* (L.) can be predicted based on host genetics. McIntosh et al., [-@mcintosh2024] found that coastal perennial and montane annual *M. guttatus* harbored distinct soil fungal communities, despite the absences of host local adaptation to underground conditions. This suggests that species divergence in life history and associated traits can shape responsiveness to microbial symbionts [@mcintosh2024]. The potential effects of FEF on *Mimulus* hosts have not been thoroughly investigated, despite the possibility that the microbiome-expanded phenotype may influence its response to selection pressures. No previous studies have considered
host genetics and leaf shape influence FEF community composition in *Mimulus* spp. leaf tissue.

In this study, we asked: 1) How do FEF communities differ in sympatric populations of *M. guttatus* and *M. laciniatus* grown in common gardens; 2) What is the role of leaf morphology in FEF colonization of *M. guttatus* and *M. laciniatus*? 3) Are there specific genetic loci associated with FEF communities in *Mimulus* spp.? To answer these questions we conducted a reciprocal transplant experiment in Yosemite National Park, CA, USA. We used locally adapted genotypes of *Mimulus guttatus* (syn. *Erythranthe guttata* (Fisch. ex DC.) G.L. Nesom) and *Mimulus laciniatus* (syn. *Erythranthe laciniata* (Fisch. ex DC.) G.L. Nesom) as parental lines and their F~2~ hybrids to understand the contributions of host plant genetics and phenotype, and the environment to FEF community composition. Crossing parental lines and generating F~2~ hybrids allowed us to decouple leaf shape from host genetics and understand the relative importance of each component in shaping FEF communities. We predicted genotypes adapted to their local environment would harbor greater levels of FEF abundance and diversity, as well as distinct community composition compared to non-locals. We also predicted that variation in leaf shape will affect microbial community composition in a segregating hybrid population. We expected that granite outcrop sites would have less FEF abundance and diversity than meadow sites due to the harsher environmental conditions.

# Materials and Methods

### Field experiment design 

The reciprocal transplant was conducted in Yosemite National Park, CA, USA from May to July 2021. It involved arranging 24 individuals into 25 randomized blocks in an 8 x 15 cm formation with a separation of 2.5 cm. Our study closely replicated experiments carried out in the years 2013 and 2019 by Ferris and Willis [-@ferris2018] as well as Tataru et al., [-@tataru2023]. The experiment utilized four different study sites: two meadows where native *M. guttatus* grows near a standing seep (Little Meadow "Meadow 1" [37.767781, -119.772720; elevation: 2013 m a.s.l.], Crane Flat "Meadow 2" [37.755968, -119.803031; elevation: 1879 m a.s.l.) and two granite outcrops hosting native *M.laciniatus* (Olmstead Point "Granite 1" [37.810700, -119485200; elevation: 2572 m a.s.l.), Yosemite Creek "Granite 2" [37843702, -119573120; elevation: 2424 m a.s.l.]).

The reciprocal transplants used generations of hybrids created from inbred *M. guttatus* (YVO 18; 37.723366, -119.746433; elevation: 1645 m a.s.l.) and *M. laciniatus* lines (WLF 47; 37.841533, -119.59385; elevation: 2436 m a.s.l.). Parental lines were locally adapted to moist seep/meadow and granite outcrops, respectively, not the experimental sites. Hybrids were created by crossing the parental inbred lines to generate F1 hybrids, which were then self-fertilized to generate F~2~ seeds used in this study. Plant breeding was conducted in the greenhouse at Tulane University (New Orleans, LA, USA). We incorporated both reciprocal hybrid crosses: F~2~ WLF 47 maternal x YVO 18 paternal (F~2~LG) and F~2~ YVO 18 maternal x WLF 47 paternal (F~2~GL). Each block was composed of 6 of each reciprocal F~2~ hybrid and 6 of each parent, totaling 150 of each parental line and cross-type per habitat (i.e., meadow and granite) (150 × 4  = 600) and 2,400 overall experimental plants (600 × 4 = 2400) (Fig. S1).

### Seed preparation and germination

We cold-stratified parental *M. laciniatus* and hybrid seeds at 4°C for 10 days and parental *M. guttatus* seeds at 4°C for 5 days to break dormancy and synchronize germination in soil (Sunshine Mix #4 Professional Growing Mix, Sun Gro). Then, we germinated seeds for one week in a greenhouse. Cold-stratification and germination was carried out at the University of California (UC) Davis. Following germination, cotyledons were carefully placed into the randomized block designs using forceps and placed wooden toothpicks to track individuals.
We attributed mortality within the first week to transplant shock and dead germinates were replaced. 

## Leaf shape measurement

For each plant, we obtained measurements leaf lobe index (LBI) as our measure of leaf shape [@ferris2015]. After 6 - 7 weeks, we destructively sampled individuals from experimental blocks by uprooting and placing samples in zip-top plastic bags and preserving in ice chest until ready to process (~ 2-3 hrs). We ensured samples did not come into direct contact with ice by placing a barrier (e.g., towel) to avoid tissue damage. We prepared and preserved samples at the UC Merced Yosemite Field Station. Fist, we cleaned plants with tap water to remove all soil and debris remnants from the leaves and roots. We removed all healthy leaves (\~ 5 - 7) from the stems. We used a transparency film to hold the most notably lobed leaf in place and flatten, after which we took a digital photograph for further analysis. To calculate the LBI, we followed Ferris et al., [-@ferris2015]. Briefly, leaf lobing is calculated as the convex hull area minus the true leaf area divided by convex hull area of a digital photograph of a leaf in ImageJ [v1.52r; @schneider2012]. 

We measured ACI content with ACM-200plus (Opti-Sciences Inc. Hudson, New Hampshire, U.S.A.) on haphazardly selected locations of the leaf surface (working from the petiole out to the leaf tip) [@tellezTraits2022]. The ACM-200 calculates an ACI value from the ratio of % transmittance at 931 nm/% transmittance at 525 nm [@opti-sciencesinc], effectively accounting for leaf thickness (LT). We measured LT (μm) with a Mitutoyo 7327 Micrometer Gauge (Mitutoyo, Takatsu-ku, Kawasaki, Japan) on haphazardly selected locations of the leaf lamina, taking care to avoid major and secondary veins. We used an Imada DST-11a digital force gauge (Imada Inc., Northbrook, IL, United States) to measure leaf punch strength (LPS), a measure of leaf toughness, on the lamina of each leaf selected, avoiding minor leaf veins when possible [@tellezTraits2022]. It functions by conducting punch-and-die tests with a sharp-edged cylindrical steel punch (2.0 mm diameter) and a steel die with a sharp-edged aperture of small clearance (0.05 mm). Once LPS was measured, we used a 4 mm diameter punch hole to puncture disks for LMA measurements. We collected one disk per leaf (see Supplementary material for details). The disk punches dried were shipped to Tulane University, New Orleans, LA, USA to dry at 60 ℃ for 48-72 hours before being weighed.

## Molecular Work

### Tissue preservation

After collecting the leaf shape measurements. We preserved the whole leaf lamina from plants due to their small size, in contrast to Arnold et al., [-@arnold2003] and Tellez et al., [-@tellezTraits2022]. Leaf lamina were sterilized with sequential washes in 95% EtOH (10 s), 0.5% sodium hypochlorite (NaOCl) (60 s), and 70% EtOH (60 s) and air dried under sterile conditions. The maximum amount of leaf lamina was preserved in sterile 2 mL tubes with \~ 1 mL CTAB solution (1 M Tris–HCl pH 8, 5 M NaCl, 0.5 M EDTA, and 20 g CTAB). The leaf tissue in CTAB solution was used for amplicon sequencing (described in detail below). All leaf tissue handling was performed in a sterile environment with an alcohol burner lamp inside a portable biosafety cabinet. All surfaces were previously sterilized sequentially with 0.5% NaOCl, 95% EtOH, and 70% EtOH. We surface sterilized surfaces and instruments in between sample handling to prevent cross contamination.

### Amplicon sequencing

We stored leaf tissue in CTAB solution for 12 months at 20°C before extracting DNA at Tulane University. We followed the DNA extraction protocol and quality control assays described in Chapter 2. Libraries were sequenced on the Illumina NextSeq 1000 platform with the P1 reagent kit (2 × 150 bp) at Duke Genome Sequencing and Analysis Core Facility (Durham, NC, USA).
<!-- To prepare for sample DNA extraction procedure, we decontaminated all instruments, materials, and surfaces in biosafety cabinet with 0.5 % NaOCl, 70 % EtOH, and 95% EtOH, and subsequently treated with UV light for 30 minutes. We subsampled 0.2 - 0.3 g of leaf tissue from each sample and placed into a sterile 2 mL tubes containing an assortment of beads: 3.2 mm stainless steel beads (Next Advance, Cat# SSB32), 100 µL stainless steel bead blend, 0.9-2.0mm (NextAdvance, Cat# SSB14B) and 2-3 of the autoclaved 2 mm zirconium oxide beads (Next Advance, Cat# ZRoB20). The 2 mL tubes with beads were previously prepared. We then proceeded to lyophilize samples for 72 hours to fully remove CTAB content from tissue. After, we submerged the sample tubes in liquid nitrogen for 30 s and homogenized samples at 30 Hz for 3 minutes in a TissueLyser LT (QIAGEN, Valencia, CA, USA). We stored samples in 20 ℃ until DNA extraction procedure. -->

<!-- We used a DNA extraction protocol for high-molecular weight DNA extraction adapted from Russo et al., [-@russo2022]. Briefly, it is a CTAB:chloroform:isoamyl extraction combined with a solid-phase reversible immobilization (SPRI) bead step [@russo2022; @rohland2012; @liu2023]. Protocol modifications allowed us to optimize extractions for fungal DNA from preserved leaf tissue [see details in @aponterolon2023]. After all genomic DNA was extracted, we quantified the DNA using Quant-iT® dsDNA HS Assay kit with Qubit Flourometer (Thermo Fisher Scientific, Waltham, MA, USA., Cat# Q33120) and followed a two-step amplification approach described by Sarmiento et al. [-@sarmiento2017] and U'Ren & Arnold [-@uren2017]. We used standard primers ITS1F [@gardes1993] and ITS2 [@inbook] modified with the Illumina TruSeq adaptor (see Supplementary Material). Every sample was amplified in three parallel reactions at the annealing temperatures 52 ℃, 54 ℃, and 56 ℃ to amplify a wide range of fungal taxa and reduce amplification bias for short ITS sequences [@uren2017; @lumibao2018]. Each PCR (PCR1) reaction contained 2 µL of sample DNA template. We visualized PCR1 reactions with SYBR™ Safe DNA Gel Stain (Thermo Fisher Scientific, Waltham, MA, USA., Cat# S33102) on 2% agarose gel [@oita2021]. We combined 5 µL of amplicon product from parallel reactions into a single tube per sample and purified using Sera-Mag™ SpeedBead Carboxylate-Modified Magnetic Particles (Hydrophobic) (Thermo Fisher Scientific, Waltham, MA, USA., Cat#09-981-123) prepared as per [-@rohland2012 and -@liu2023] and used a ratio of 1.2x:1 with 80% EtOH following manufacturer's instructions. We used 3 µL of PCR1 product from samples, DNA extraction controls, and PCR1 negative controls for a second PCR (PCR2) with barcoded adapters (IDT, Coralville, Iowa, USA). Each PCR2 reaction (total 30 µL) contained 1X Phusion Flash High Fidelity PCR Master Mix (Thermo Fisher Scientific, Waltham, MA, USA., Cat# F548L), 0.075 µM of barcoded primers (forward and reverse pooled at an initial concentration of 2 µM) and 0.20mg/mL of BSA (Thermo Fisher Scientific, Waltham, MA, USA., Cat# B14) following [-@sarmiento2017 and -@uren2017]. Before final pooling for sequencing, we purified and concentrated amplicons using SPRI beads to a total volume of 20 µL. We quantified PCR2 product with Quant-iT™ PicoGreen™ dsDNA Assay Kit (Thermo Fisher Scientific, Waltham, MA, USA., Cat# P7589) with the BioTek Synergy LX plate reader (Agilent, Santa Clara, CA) and combined equimolar amounts of libraries, including DNA extraction controls, PCR1, and PCR2 negative controls into a 10nM library pool. We did not detect any contamination visually or fluorometrically. Libraries were sequenced on the Illumina MiSeq platform with Reagent Kit v3 (2 \u00D7 300 bp) at Duke Genome Sequencing and Analysis Core Facility (Durham, NC, USA). Throughout all these steps, we used a separate set of sterile pipettes, tips, and equipment to reduce contamination in a designated PCR area to restrict contact with pre-PCR materials [@oita2021]. -->

<!-- ### Sequence-based genotyping -->

<!-- We genotyped individuals following a modified ddRADseq protocol, Rapture [@ali2016; @nelson2019], for the identification of single nucleotide polymorphisms (SNPs). We allotted the remaining DNA extracted from leaf tissue to the ddRADseq library preparation. The Rapture protocol call for a two step digestion process, for which we used the restriction enzyme *Bfal-HF* (R0568S, New England Biolabs, Ipswich, MA, USA) in the first DNA digestion, and  *PstI* (R0140L, New England Biolabs, Ipswich, MA, USA) in the second digestion. We then ligated annealed oligos to each sample. We prepared ddRAD libraries using the NEBNext® Ultra™ II DNA Library Prep Kit for Illumina® (E7645S, New England Biolabs, Ipswich, MA, USA) with the *i7* oligos from NEBNext® Multiplex Oligos for Illumina® (E7335S, New England Biolabs, Ipswich, MA, USA) and a custom *i5* barcoded oligos (IDT, Coralville, Iowa, USA; see Supplementary Materials). We sequenced the library on the Illumina NovaSeq X Plus platform at Duke Genome Sequencing and Analysis Core Facility (Durham, NC, USA).  -->


### Bioinformatic analyses

#### ITS amplicons
Similar to Chapter 2, we used FastQc v0.12.1 [ v0.12.1; @andrews2010] and MultiQC [@ewels2016] tools to assess the quality of the reads. A total of 20,685,544 total ITS1 reads yielded from 318 (including 31 controls) libraries sequenced in a single run. We modified the open-source DADA2 bioinformatic pipeline for our data set [@callahan2016]. Our initial quality assessment revealed that forward and reverse reads were of high quality. We filtered our reads for ambiguous calls before removing the adapters by using `filterAndTrim` function and argument `maxN = 0` from the `dada2` package [v1.28.0; @callahan2016]. We removed forward and reverse primer adapters (and their reverse compliments) and eliminated reads shorter than 10 bp using the `cutadapt` tool [v4.6, @martin2011]. Following this filtering process, we re-evaluated read quality and then applied stringent filter and truncation parameters based on maximum expected errors (maxEE) rather than read length [@edgar2015] to ensure  high-quality taxonomy assignment later on. For this we set set the arguments `trunQ = 2`, `maxEE = c(2,2)` for forward and reverse reads, and minimum read length of 50 bp with `minLen = 50` in the used the `filterAndTrim` function [@callahan2016]. After this filter, we dereplicated reads with the `derepFastq` function and merged pairs using `mergePairs` functions with an overlap of 12 bp, minimum. We then inferred composition of the samples with `dada` function, which applies the DADA algorithm [@callahan2016; @rosen2012]. We removed chimeras via the "consensus"method with the `removeBimeraDenovo` function and ultimately we used the `assignTaxonomy` function to assign taxonomy the amplicon sequence variants (ASV) referenced against the UNITE database [@abarenkov2023a]. After taxonomy assignment we used the `phyloseq` package [@mcmurdie2013] to create a phyloseq object for downstream analyses.

We decontaminated ITS amplicons and performed all post-quality bioinformatic steps as described in Chapter 2.
<!-- We used the `decontam` package [v1.20.0; @davis2018] to statistically determine which ASVs are likely contaminants based on their frequency in our samples and remove them using `prune_taxa` function from the `phyloseq` package [v1.44.0; @mcmurdie2013]. After which, we calculated the average read count found in DNA and PCR extraction controls, considered to be laboratory contaminants, and subtracted that from the samples' read counts. We then used custom scripts to remove any ASV that represented less than 0.1% of the abundance per sample on the assumption that it originates from contamination throughout handling of samples in the DNA and PCR processes. We removed singleton ASVs with the `prune_taxa` function [@mcmurdie2013]. All post-quality control bioinformatic steps were performed in *R* [v.4.3.3; @rcoreteam2024]. -->

<!-- #### Single Nucleotide Polymorphisms (SNPs) -->

<!-- The *i7* demultiplexing was performed by Duke Genome Sequencing and Analysis Core Facility (Durham, NC, USA). The *i5* demultiplexing and generation of *vcf* files were done following the Nelson [-@nelson2020]. NEEDS MORE -->



## Statistical Analyses

### Community Diversity

We standardized the libraries using repeated rarefaction, as described by Cameron et al., [-@cameron2021]. Following an assessment of Good's coverage and a qualitative evaluation of the libraries, we established a sequence depth of 1300 reads to ensure balanced coverage and sample breadth. This approach facilitated a proportional representation of observed sequences from host species and provided a robust characterization of random variation inherent in the rarefaction process [@cameron2021; @schloss2024]. Subsequently, we generated 50 rarefied abundance matrices without replacement utilizing the `mirl` function from the `mirlyn` package.
Next, we computed alpha diversity per sample as Hill orders -observed richness (q = 0), exponentiated Shannon's entropy (q = 1), and Inverse Simpson's Diversity (q =2)— using our modified version of the `alphadivDF` function based on work by Cameron et al., [-@cameron2021; see custom script in Supplementary material] that wraps common diversity indices in `vegan` package utility functions [@oksanen2022]. .

For beta diversity analyses, we performed a Hellinger transformation on the rarefied abundance matrices and calculated a Bray-Curtis dissimilarity matrix for each, then we applied a distance-based Redundancy Analysis (dbRDA) on dissimilarities to statistically compare similarities within each host species per site [@anderson2017; @legendre1999; @mcardle2001].

Our dbRDA model consisted of terms logLBI, cross-type, and habitat type. The leaf shape data was not randomized or sub-sampled to match rarefied dataset, the original values applied to all 50 rarefied matrices. To select the best model, we evaluated the marginal and sequential significance of the constraining variables after 999 permutations with function `anova.cca` [@legendre2011; @legendre2012; @oksanen2022]. We evaluated the homogeneous dispersion of variances with a permutational analysis of multivariate dispersion (PERMDISP) using the `betadisper` with parameter `type = "median"`, and `permutest` functions from `vegan`, the latter with 999 permutations [@oksanen2022]. We used a post-hoc Tukey's test to compare the differences in the dispersion of the FEF communities among cross-types and habitat types.
<!-- We used the `simper` function from `vegan` to discriminate which species contribute the most to compositional differences between groups [@oksanen2022]. -->
<!-- To determine if there is a significant correlation of core FEF community with cross-type and habitat type, we conducted an indicators species analyses (ISA) using the `multipatt` function from the `indicspecies` package [@decaceres2009]. -->

<!-- To assess correlations between pairwise FEF community dissimilarity and the geographical distance matrix per host species (Q4), we computed a Mantel tests with Spearman's rho and 999 permutations using the `mantel` function [@oksanen2022]. -->
<!-- For this test, we opted for a less taxing computational approach and rarefied sequences with the same parameters as before and calculated Hellinger transformations with the `avgdist` function [@oksanen2022]. -->
<!-- We then calculated the Bray-Curtis dissimilarity with `vegdist` [@oksanen2022]. -->
<!-- For the geographical distances between sites, we used `distm` function with the Vicenty (ellipsoid) method from the `geosphere` package [@hijmans2022]. -->

### Leaf shape

We checked for normality and homoscedasticity of the LBI measurements.
We used Shapiro-Wilk and Fligner-Killen tests from the `stats` package [@rcoreteam2024] to check for normality and homoscedasticity, respectively. We established that the leaf lobe index data was not normally distributed and not homoscedastic and performed log-transformation. We then used non-parametric tests, the Wilcoxon Rank Sum test, to compare LBI means among cross-types. We used the `compare_means` and `stat_compare_means`functions from the `ggpubr` package [@kassambara2023] to perform these tests and properly visualize them. We adjusted *p* values to account for false discovery rates in multiple comparisons by using “BH” method [@benjamini1995].

All statistical analyses were performed in *R* programming language [v.4.3.3; @rcoreteam2024].
We present FEF community data for 287 samples.
<!-- and SNPs data for NNNN samples. -->
We present the log-transformed LBI from and samples from the larger common garden described above (*n* = `r sum(!is.na(plant_traits$logLBI))`), which include samples with FEF community data (*n* = `r sum(!is.na(ps_clean_3@sam_data[["logLBI"]]))`). The FEF community data is presented at the plant/sample level (*n* = `r sum(!is.na(plant_traits$Observed))`).

# Results

Our sequencing effort yielded 20,685,544 reads representing 1291 ASVs from 318 samples after processing through the DADA2 pipeline. The raw reads obtained were composed of 69.1% Ascomycota, 31% Basidiomycota, 0.05% Chytridiomycota, 0.01% Mortierellomycota, \<0.01% Glomeromycota, \<0.01% Rozellomycota, \<0.001% Aphelidiomycota, and 0.23% missed hits.
Following decontamination and removal of singletons we obtained 20,157,032 reads representing 532 ASVs from 287 samples composed of 69.1% Ascomycota, 31% Basidiomycota, 0.05% Chytridiomycota, \<0.01% Mortierellomycota, 0.001% Glomeromycota, \<0.001% Rozellomycota, and 0.25% missed hits (Fig. 1A and Fig. 2). The presence of Ascomycota (100%) and Basidiomycota (99%) was prevalent in samples across all cross-types and habitat types in the un-rarefied data (Fig. 1A). This points to core taxa associated with *Mimulus* spp. We identified eighteen core taxa members at a 1% detection threshold and 50% prevalence in samples from the un-rarefied data (Table 1). 
<!-- We found that 208 (39%) ASVs are shared across habitat types and 164 (31%) shared by cross-types in the un-rarified data (Fig. 2A - 2B).  -->
In the rarified data set we comprised of 282 samples were we observed that 202 (38%) and 159 (30%) ASVs are shared across habitat types and cross-types, respectively (Fig. 2A - 2B). Within the ten most abundant genera, *Cladosporium*, *Vishiniacozyma*, and *Ramularia* are the most abundant across all samples (Fig. S2). 
<!-- The small differences in shared and unique ASVs provides confidence that the rarified data accurately represents the underlying dynamics of the system (Fig. 1 - 2 and Fig. S2).  -->
The following section reports on results from the rarefied data sets.

Alpha diversity was significantly different between all parental lines and hybrid crosses, with the exception of the Hill order 2 (𝑞 = 2, *p* \> .05) comparison of F~2~LG and G parental line (Fig. 3C). The parental lines had significantly greater levels observed richness (𝑞 = 0, *p* \< .001, Fig. 3A) when compared to their F~2~ progeny when accounting for all habitat types. Only F~2~GL had significant differences (*p* \< .001) in observed richness at all habitats. For F~2~GL and F~2~LG, we saw significant differences Hill order 1 and 2 (𝑞 = 1, and 𝑞 = 2) when comparing Meadow 1 and Meadow 2 (*p* \< .001), and Granite 1 to Meadow 2 (*p* \< .001). Additionally, F~2~LG cross-type also had significant differences for these Hill orders when comparing Meadow 1 and Granite 1 (*p* \< .05). We observed a similar pattern in beta diversity, habitats showed significant differences from one another (Fig. 3D - 3F). Meadow 2 has consistently greater levels of beta diversity for all Hill orders, while Granite 1 has the lowest observed richness (𝑞 = 0), but not Hill order 1 or 2 (Fig. 3D - 3F). Individuals from Granite 2 are not included in the analysis due 100% mortality after one week of planting at site (Fig. S4).

To further understand beta diversity and FEF community composition we performed two distance-based Redundancy Analysis (dbRDA) modeling the relationship between FEF communities, leaf shape, cross-type, and habitat type: the first accounting for individuals from parental lines and hybrids, and a second only with hybrids. The best fit model with all individuals and cross-types revealed that 18.71% of the overall variance in FEF communities was accounted for by log-transformed LBI, cross-type, and habitat type, the constraining variables. The first axis (dbRDA1) explained 45.3% and the second axis (dbRDA2) explained 31.5% of the constrained variance (Fig. 4). 
<!-- We saw that Granite 1 and lobLBI, are opposite to Meadow 1 along dbRDA1. When we visualized the ellipses for cross-types, we observed highly overlapping FEF communities in F~2~GL and F~2~LG cross-types (Fig. 4A), as well less overlap in groupings of G and L parental lines.  -->
In contrast, we note clear and little to non-overlapping FEF communities when results are visualized by habitat type (Fig. 4B). The marginal significance of constraining variables after permutational ANOVA revealed that all variables where significant at ⍺ = 0.05 but varied in their explanatory power (Table S3). We saw evidence for strong habitat type effects on FEF communities. The dbRDA for hybrids revealed that 0.01% of the overall constrained variance was explained by log-transformed LBI, cross-type and habitat type. The constrained variance was explained by dbRDA axis 1 (65.5%) and axis2 (19.7%) (Fig. 5 and Table S3).

We performed permutational analysis of multivariate dispersion (PERMDISP) to test for homogeneity of variances of FEF communities from clustered in the dbRDA analyses. We found homogeneous variance of FEF communities across for all parental lines and crosses (*F*~3, 14096~= 46.28, *p* \=.001). The post-hoc Tukey's test revealed that all parental lines and cross-type comparisons were significantly different at ⍺ = 0.05. We also detected significant differences in FEF communities by habitat type (*F*~2, 14097~= 2472.5, *p* \= .001), as well as the interaction between habitat and cross types (*F*~2, 14088~= 471.6, *p* \= .001 ). Our post-hoc Tukey's test showed that FEF communities from all habitat types had significant differences in the dispersion of variance at ⍺ = 0.05, meanwhile the interaction between habitat and cross-type showed more nuances for certain combinations, yet significant differences for most in the dispersion of variance at ⍺ = 0.05 (Table S4). For our model with only hybrid crosses, we found that homogeneity of variances of FEF communities were not significantly different between cross-types (*F*~1, 11548~= 0.034, *p* \= .85). The post-hoc Tukey's test revealed that F~2~LG and F~2~GL had no differences in the dispersion of variance at ⍺ = 0.05.

To understand how leaf shape influences FEF communities, we measured LBI and compared means with a Wilcoxon rank sum tests. Once we adjusted for multiple comparison, revealed no significant differences in parental lines and cross types across all habitat types at ⍺ = 0.05 (Fig. 6A). Meadow 1 and 2 did not differ significantly in LBI, while Granite 1 had greater LBI compared to Meadow 1 and 2. (*p* \<.001, Fig. 6B).<!-- but not Meadow 2 and Granite 1, an unexpected result since L parental line is locally adapted to granite habitat. The F~2~LG and F~2~GL progeny only had significant differences when compared to each other, and F~2~LG when compared to G in Meadow 2. In Granite 1, we saw the F~2~ progeny had significant differences compared to parental lines (*p* \=.05, Fig 6A), but not when compared to each other (Fig. 6A). The LBI differences across habitat types were significant for the F~2~ progeny (*p* \=.05), parental lines did not differ significantly in LBI across habitats (Fig. 6B).  -->
<!-- <!-- **SNPs results coming here soon!** --> -->

# Discussion

Our study provides a comprehensive analysis of the FEF communities associated with *Mimulus* spp. leaf tissue and the underlying genetic dynamics. We found that FEF diversity and community composition are significantly different between cross-types. These findings bring attention to symbiotic relationships in *Mimulus* that may be evolutionary adaptive. Fungal community differences between habitat types maybe due to distinct species pool regardless of habitat similarity (e.g.,, meadows). Our results suggest host cross-type and habitat type are significant predictors of FEF colonization, with varying degrees of impact. Granite 1 had lower ASV richness than Meadow 1-2, but increased Hill orders 1 and 2 compared to Meadow 1. This is not surprising, given the strong abiotic differences (i.e. soil moisture) meadow and granite habitats experience throughout the growing season [@ferris2018; @tataru2023] that could explain the need for allocating a greater effective number of species[@chao2014]. The differences between the meadow habitat could be explained by their recent fire history, Meadow 1 burned in 2013 during the Rim Fire, which could have caused a shift in the local flora and evapo-transpiration rates experienced at the sites leading to changes in and FEF pool [@bowman2021; @nationalparkservice2023; @giauque2016]. Meadow 1 is generally drier and shrubbier than Meadow 2, which did not burn in 2013. These potential sources of variation merit further investigation.   

Exploring the FEF community of *Mimulus* in a reciprocal transplant experiment allowed us to delineate how cross-type by environment interactions shape these communities.  The constrained ordination analyses revealed a clear clustering by habitat type along both dbRDA axes (Fig. 4B), while  cross-types showed less distinct clustering (Fig. 4A). The *Mimulus* parental lines hosted distinct FEF communities and differed significantly in alpha diversity levels regardless habitat. Bowsher et al., found a similar effect of environment and host identity when comparing the bacterial rhizosphere community of locally adapted *M. guttatus* ecotypes [-@bowsher2020]. Similarly, in a greenhouse experiment McIntosh et al., [-@mcintosh2024] found that site, soil origin, and *M. guttatus* plant ecotypes (annual and perennial) were the most important factors determining the structure of root associated fungal communities. Despite experimental plants performing poorly when interacting with *Mimulus guttatus*-derived biota, McIntosh et al., [-@mcintosh2024] find that AMF communities were strongly differentiated in common garden conditions. While their results are focused on the root microbiota and under greenhouse, we consider, that our results show that the differences in FEF communities between *M. guttatus* and *M. laciniatus* add to the adaptive trait differences between these diverged species, meriting further investigation.  


We produced F~2~ progeny to decouple leaf shape from genetic host genetics and found that the FEF communities are significantly correlated with leaf lobe index (LBI). The capacity of the F2 progeny to host distinct FEF communities regardless of the genetic background provides strong evidence in support of the LBI functioning as an environmental filter. This adds to the suite of leaf functional traits that have been found to structure FEF communities [@tellezTraits2022; reviewed in gonzalez-teuber2021; @gonzalez-teuber2020]. The F2 progeny exhibited a higher number of unique ASVs compared to parental lines, suggesting that hybridization may increase the potential for novel FEF interactions (Fig. 2). The core taxa found in all samples includes *Vishiniacozyma victoriae* which has been shown to provide cold tolerance to their hosts [@vujanovic2021; @buzzini2018]. Expanding the breadth of associated FEF taxa could be a strategy for increasing hybrid fitness in the face of environmental stressors. We do not have the data to support this claim, but it is a potential avenue for future research.


# Conclusions

Taking an experimental approach to explore the FEF communities in the  *Mimulus guttatus* species complex has yielded a diverse number of taxa that are influenced by the local environment, host genetics and host phenotype. These findings emphasize the complex interactions of above ground fungal symbionts in a robust ecological and evolutionary model system. Our understanding of FEF communities in *Mimulus* spp. 
leaf tissue opens new avenues for inquiry into the role of FEF in plant fitness and adaptation to local environments. Further research focused on how the temporal dynamics of FEF communities in *Mimulus* spp. impact plant fitness is needed to comprehend the potential role of FEF in local adaptation and phenotypic plasticity.

# Acknowledgements

This work was supported by the National Institute of General Medicinal Sciences of the National Institute of Health (NIH) under award number R35GM138224 to KGF. We thank the Yosemite National Park Service for permit support (YOSE-2021-SCI-0033, YOSE-2022-SCI-0051), and Breeanne Jackson at Yosemite Field Station (doi:10.21973/n3v36c) for logistical support and providing accommodation.  We thank Fidel J. Machado Perez, for field assistance. This research was supported in part using high performance computing (HPC) resources and services provided by Information Technology at Tulane University, New Orleans, LA. Lastly, we would like to acknowledge the original inhabitants of the unceded land on which our research was conducted, the Southern Sierra Miwuk Nation, Bishop Paiute Tribe, Bridgeport Indian Colony, Mono Lake Kutzadikaa, North Fork Rancheria of Mono Indians of California, Picayune Rancheria of the Chukchansi Indians and the Tuolumne Band of Me-Wuk Indians. Their culture and stewardship remain an integral part of the land. As scientists we strive to take responsibility for the impacts of colonialism in our field and move forward with respect and support of indigenous movements and knowledge.

# Conflict of Interest Statement

The authors declare no competing interests.

# Data Availability Statement
The genomic data that support the findings of this study will be submitted to NCBI-GenBank upon acceptance of this manuscript. The manuscript and code for reproducibility is available from corresponding author's GitHub:[https://github.com/jibarozzo/endophyte_mimulus_genotype.git](https://github.com/jibarozzo/endophyte_-leaf-traits_mimulus.git)

# References

::: {#refs}
:::

# Figures

```{r, themes}
#| echo: false
#| eval: true
#| tidy: true

#ggplot themes
# Theme for leaf trait and diversity plots: discrete
theme_lfspp_discrete <-      theme_classic(base_size = 16) +
  theme(
    legend.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    #legend.text = element_text(face = "italic"), #Make legend text italic
    legend.text = element_markdown(),
    plot.caption = element_markdown(size = 12),
    axis.text.x = element_blank(),
    axis.title.y = element_text(size = 12)
  )

# Theme for leaf trait plots: continuous
theme_lfspp_continuous <- theme_classic(base_size = 16) +
  theme(
    legend.title = element_text(face = "bold"),
    panel.border = element_rect(linetype = "blank", fill = NA),
    legend.text = element_text(face = "italic"),
    #Make legend text italic
    axis.text.x = element_text(size = 14),
    legend.position = "bottom"
  )

# Theme for species by diversity  plots: discrete
theme_sppdiv_discrete <-    theme_classic(base_size = 16) +
  theme(
    legend.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold", size = 14),
    panel.border = element_rect(linetype = "blank", fill = NA),
    #legend.text = element_text(face = "italic", size = 12), #Make legend text italic
    legend.text = element_markdown(),
    axis.text.x.bottom = element_blank(),
    axis.title.x = element_blank()
  )


theme_div_discrete <-    theme_classic(base_size = 16) +
  theme(
    legend.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold", size = 14),
    panel.border = element_rect(linetype = "blank", fill = NA),
    legend.text = element_markdown(),
    axis.text.x.bottom = element_blank(),
    axis.title.x = element_blank()
  )

# Theme for leaf trait and diversity  plots: continuous
theme_lfdiv_continuous <- theme_classic(base_size = 16) +
  theme(
    legend.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold.italic", size = 14),
    panel.border = element_rect(linetype = "blank", fill = NA),
    legend.text = element_text(face = "italic"),
    #Make legend text italic
    axis.text.x = element_text(size = 14)
  )
```

## Figure 1

<!-- Seems weird to have so much Basidiomycota - how many taxa does this represent? -->

```{r, figure1}
#| echo: false
#| eval: true
#| tidy: true
#| message: false
#| fig-width: 6
#| fig-height: 6
#| label: rabun_barplot
#| fig-cap: "Relative abundance of fungal phyla in rarefied data, observed by habitat type and cross-type in reciprocal transplant experiment."


#Barplots with microeco
# Quick addition traits log transformed
names_list <- colnames(ps_clean_3@otu_table) #List of samples
ps_clean_3@sam_data <- plant_traits |>
  filter(Unique_ID %in% names_list) |>
  select(c(1:12, 15:20)) |>
  mutate(X = Unique_ID) |>
  column_to_rownames(var = "X") |>
  sample_data()


# Raw data
#micro_psclean <- phyloseq2meco(ps_clean_3) # First convert phyloseq to meco


# t1 <- trans_abund$new(dataset = micro_psclean, taxrank = "Phylum", ntaxa = 8)
#
# t1gg <- t1$plot_bar(others_color = "grey70", facet = c("Habitat", "Genotype"), xtext_keep = FALSE, legend_text_italic = FALSE, color_values = RColorBrewer::brewer.pal(8, "Set3"))
# t1gg <- t1gg +
#   ggtitle("Un-rarified data") +
#   theme(legend.title = element_text(face = "bold"),
#          plot.title = element_text(face = "bold", size = 14),
#          strip.text = element_text(face = "bold", size = 12),
#          panel.border = element_rect(linetype = "blank", fill = NA),
#          axis.text.x = element_blank())

#t1gg

# rarefied Abundance
micro_rarefied_ps <- phyloseq2meco(rarefied_phyloseq) # First convert phyloseq to meco

r1 <- trans_abund$new(dataset = micro_rarefied_ps, taxrank = "Phylum", ntaxa = 8)
r1gg <- r1$plot_bar(others_color = "grey70", facet = c("Habitat", "Genotype"), xtext_keep = FALSE, legend_text_italic = FALSE, color_values = RColorBrewer::brewer.pal(8, "Set3"))
r1gg <- r1gg +
  #ggtitle("Rarified data") +
  theme(legend.title = element_text(face = "bold", size = 12),
         plot.title = element_text(face = "bold", size = 14),
         strip.text = element_text(face = "bold", size = 12),
         panel.border = element_rect(linetype = "blank", fill = NA),
         axis.text.x = element_blank())
r1gg
ggsave(file.path(path, "figures/figure1_rarefied_only.png") , plot = r1gg, dpi=300, units=c("mm"), width=300, height=250)

# # Arrange plots
# ra_plots <- ggarrange(t1gg, "", r1gg,
#                           nrow = 3, ncol = 1,
#                       heights = c(1, 0.1, 1),
#                           common.legend = TRUE, legend = "bottom",
#                           labels = c("A", "B"))
# ra_plots
#
# ggsave(file.path(path, "figures/figure1.png") , plot = ra_plots, dpi=300, units=c("mm"), width=200, height=250)
```

## Figure 2

```{r, figure2}
#| echo: false
#| eval: true
#| tidy: true
#| message: false
#| fig-height: 5
#| fig-width: 6.5
#| label: venn_diagrams
#| fig-cap: "Venn diagrams of present and absence of ASVs among cross-types and habitat type in rarified data. A) Represent the overlap of ASVs habitat types and B) in cross-types. Number of ASVs are represented the count and in parentheses as a ratio shared between cross-type and habitat type."

micro_psclean <- phyloseq2meco(ps_clean_3) # First convert phyloseq to meco

# un-rarified data
# Per site
# dataset1 <- micro_psclean$merge_samples(use_group = "Habitat")
# # create trans_venn object
# v1 <-
#   trans_venn$new(dataset1, ratio = "numratio") # Percentage represent ratio of shared ASVs
# v1gg <-
#   v1$plot_venn() + #https://r-charts.com/color-palettes/#discrete
#   ggtitle("Un-rarified data") +
#   theme(plot.title = element_text(
#     face = "bold",
#     size = 16,
#     hjust = 0.5,
#     vjust = 0.5
#   ))
#
#
# # Per genotype
# dataset2 <- micro_psclean$merge_samples(use_group = "Genotype")
# v2 <- trans_venn$new(dataset2, ratio = "numratio")
# #v2$plot_venn()

# rarified data
micro_rarefied_ps <- phyloseq2meco(rarefied_phyloseq) # First convert phyloseq to meco
# Per site
dataset3 <- micro_rarefied_ps$merge_samples(use_group = "Habitat")
# create trans_venn object
v3 <- trans_venn$new(dataset3, ratio = "numratio")
v3gg <- v3$plot_venn() +
  #ggtitle("Rarified data") +
  theme(plot.title = element_text(
    face = "bold",
    size = 12,
    hjust = 0.5,
    vjust = 0.5
  ))


# Per genotype
dataset4 <- micro_rarefied_ps$merge_samples(use_group = "Genotype")
v4 <- trans_venn$new(dataset4, ratio = "numratio")
v4gg <- v4$plot_venn()


# Arrange plots
venn_plots <- ggarrange(
  v3gg,
  v4gg,
  ncol = 2,
  nrow = 1,
  common.legend = TRUE,
  heights = c(1, 1),
  legend = "bottom",
  labels = c("A", "B")
)

venn_plots

# joined plots


# venn_plots <-
#   ggarrange(
#     v1gg,
#     v3gg,
#     "", # Fake plot to create space
#     "",
#     v2$plot_venn(),
#     v4$plot_venn(),
#     ncol = 2,
#     nrow = 3,
#     common.legend = TRUE,
#     heights = c(1, 0.1, 1),
#     legend = "bottom",
#     labels = c("A", "B","", "", "C", "D")
#   )
#
# venn_plots

# Save
ggsave(filename = file.path(path, "figures/figure2.png"), plot = venn_plots, dpi=300, units=c("mm"), width=300, height=300)
```

## Figure 3

```{r, figure3}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig-width: 6
#| fig-height: 6
#| label: boxplot_hill_orders
#| fig-cap: "Alpha diversity mean comparisons by cross-type and beta diversity mean comparisons by habitat type. Alpha diversity mean comparisons; A) Observed ASV richness (𝑞 = 0); B) Shannon's entropy (𝑞 = 1); and C) Inverse Simpson's index (𝑞 = 2) per host cross-type. A-C) Red filled boxplots correspond to F~2~GL, orange filled to G (*M. guttatus*), yellow to L (*M. laciniatus*), and teal to F~2~LG cross-type. Beta diversity mean comparions; D) Observed ASV richness (𝑞 = 0); E) Shannon's entropy (𝑞 = 1); and F) Inverse Simpson's index (𝑞 = 2)per habitat type. D-F) Purple lined boxplot and points corresponds to Meadow 1, teal to Meadow 2, and green to Granite 1. Open shapes represent: circles (F~2~GL), squares (G), diamonds (L), and triangles (F~2~LG).  Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)]."

############################################
#### Alpha diversity ####
#### At the species level ####
############################################

########## Labels ###########
#Legend title label
legend_title <- "Species"
# Species labels
labels_list <- c("F~2~GL", "G", "L", "F~2~LG")
names(labels_list) <- c("F2GL", "G", "L", "F2LG")
#############################
#Tests
hill0_species_means <- compare_means(
  Observed ~ Genotype,
  data = plant_traits_rfy,
  method = "wilcox.test",
  p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95
)
hill1_species_means <- compare_means(
  hill_1 ~ Genotype,
  data = plant_traits_rfy,
  method = "wilcox.test",
  p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95
)
hill2_species_means <- compare_means(
  hill_2 ~ Genotype,
  data = plant_traits_rfy,
  method = "wilcox.test",
  p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95
)

# Plot
hill0_species <- ggplot(data = plant_traits_rfy,
                        aes(x = Genotype, y = Observed)) +
  geom_point(
    aes(color = Genotype),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Genotype), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(labels = labels_list,
    values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_fill_manual(labels = labels_list,
    values = met.brewer(
    "Johnson",
    n = 4,
    type = "discrete",
    direction = 1
  )) +
  #scale_color_manual(aes(color = "black")) +
  theme_div_discrete +
  labs(y =  "Beta diversity (\U1D492 = 0)", x = "", col = "") +
  guides(color = guide_legend(title = "Crosstype")) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     label = "p.signif")

#hill0_species


# Hill number 1
# Shannon diversity or hill number 1
# Plot
hill1_species <- ggplot(data = plant_traits_rfy,
                        aes(x = Genotype, y = hill_1)) +
  geom_point(
    aes(color = Genotype),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Genotype), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(labels = labels_list,
    values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_fill_manual(labels = labels_list,
    values = met.brewer(
    "Johnson",
    n = 4,
    type = "discrete",
    direction = 1
  )) +
  #scale_color_manual(aes(color = "black")) +
  theme_sppdiv_discrete +
  labs(y =  "Alpha diversity (\U1D492 = 1)", x = "", col = "") +
  guides(color = guide_legend(title = "Crosstype")) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     label = "p.signif")

#hill1_species


# Hill number 2
# Inverse Simpson diversity or hill number 2
hill2_species <- ggplot(data = plant_traits_rfy,
                        aes(x = Genotype, y = hill_2)) +
  geom_point(
    aes(color = Genotype),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Genotype), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(labels = labels_list,
    values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_fill_manual(labels = labels_list,
    values = met.brewer(
    "Johnson",
    n = 4,
    type = "discrete",
    direction = 1
  )) +
  #scale_color_manual(aes(color = "black")) +
  theme_sppdiv_discrete +
  labs(y =  "Alpha diversity (\U1D492 = 2)", x = "", col = "") +
  guides(color = guide_legend(title = "Crosstype")) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     label = "p.signif")

#hill2_species

# Joined plots
hill_numbers_species <- ggarrange(hill0_species, hill1_species, hill2_species,
                                  nrow = 1, ncol = 3,
                                  common.legend = TRUE,
                                  labels = c("A", "B", "C"),
                                  legend = "bottom")

#hill_numbers_species
#ggsave(filename = file.path(path, "figures/hill_numbers_species.png"), plot = hill_numbers_species, dpi=300, units=c("mm"), width=250, height=275)


#################################
#### Beta diversity ####
#### Across sites ####
#################################

########## Labels ###########
#Legend title label
legend_title <- "Species"
# Species labels
labels_list <- c("F~2~GL", "G", "L", "F~2~LG")
names(labels_list) <- c("F2GL", "G", "L", "F2LG")
#############################
# Tests
hill0_beta_means <- compare_means(
  Observed ~ Habitat,
  data = plant_traits_rfy,
  method = "wilcox.test",
  p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95
)
hill1_beta_means <- compare_means(
  hill_1 ~ Habitat,
  data = plant_traits_rfy,
  method = "wilcox.test",
  p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95
)
hill2_beta_means <- compare_means(
  hill_2 ~ Habitat,
  data = plant_traits_rfy,
  method = "wilcox.test",
  p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided",
  mu = 0,
  conf.level = 0.95
)

# Observed richness
# Hill number 0
hill0_beta <-
  ggplot(plant_traits_rfy, aes(x = Habitat, y = Observed)) +
  geom_point(
    aes(shape = Genotype, color = Habitat),
    alpha = 0.5,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Habitat),
               alpha = 0.5,
               outlier.alpha = 0.0) +
  scale_color_manual(
    labels = labels_list,
    values = met.brewer(
      "Tsimshian",
      n = 4,
      type = "discrete",
      direction = -1
    )
  ) +
  scale_shape_manual(labels = labels_list, values = c(21:24)) +
  theme_div_discrete +
  scale_x_discrete(labels = c('', '', '', '')) +
  stat_compare_means(comparisons = my_comparisons2,
                     method = "wilcox.test",
                     label = "p.signif") +
  labs(y = "Beta diversity (\U1D492 = 0)", x = "") +
  guides(
    fill = guide_legend(title = "Habitat"),
    shape = guide_legend(title = "Crosstype", override.aes = list(size = 4, alpha = 1))
  )

#hill0_beta



# Hill number 1
# Shannon diversity or hill number 1
hill1_beta <- ggplot(plant_traits_rfy, aes(x = Habitat, y = hill_1)) +
  geom_point(
    aes(color = Habitat),
    alpha = 0.5,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Habitat),
               alpha = 0.5,
               outlier.alpha = 0.0) +
  scale_color_manual(values = met.brewer(
    "Tsimshian",
    n = 4,
    type = "discrete",
    direction = -1
  )) +
  # scale_shape_manual(labels = c("F2xGL", "G", "L", "F2xLG"),
  #   values = c(21:24),
  # ) +
  theme_div_discrete +
  scale_x_discrete(labels = c('', '', '', '')) +
  stat_compare_means(comparisons = my_comparisons2,
                     method = "wilcox.test",
                     label = "p.signif") +
  labs(y = "Beta diversity (\U1D492 = 1)", x = "") +
  guides(
    fill = guide_legend(title = "Habitat"),
    shape = guide_legend(title = "Crosstype", override.aes = list(size = 4, alpha = 1))
  )

#hill1_beta


# Hill number 2
# Inverse Simpson diversity or hill number 2

hill2_beta <- ggplot(plant_traits_rfy, aes(x = Habitat, y = hill_2)) +
  geom_point(
    aes(shape = Genotype, color = Habitat),
    alpha = 0.5,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Habitat),
               alpha = 0.5,
               outlier.alpha = 0.0) +
  scale_color_manual(values = met.brewer(
    "Tsimshian",
    
    n = 4,
    type = "discrete",
    direction = -1
  )) +
  scale_fill_manual(
    labels = labels_list,
    values = met.brewer(
      "Tsimshian",
      n = 4,
      type = "discrete",
      direction = -1
    )
  ) +
  scale_shape_manual(values = c(0:3), ) +
  theme_div_discrete +
  scale_x_discrete(labels = c('', '', '', '')) +
  stat_compare_means(comparisons = my_comparisons2,
                     method = "wilcox.test",
                     label = "p.signif") +
  labs(y = "Beta diversity (\U1D492 = 2)", x = "") +
  guides(
    fill = guide_legend(title = "Habitat"),
    shape = guide_legend(title = "Crosstype", override.aes = list(size = 4, alpha = 1))
  )

#hill2_beta


# Joining plots
hill_beta <- ggarrange(hill0_beta, hill1_beta, hill2_beta,
          nrow = 1, ncol = 3,
          common.legend = TRUE,
          legend = "bottom",
          labels = c("D", "E", "F"))
#hill_beta

#### Alpha and Beta diversity ####
# Joined plots
# A joined plot of joined plots


alpha_beta_diversity <- ggarrange(hill_numbers_species, "", hill_beta,
                          nrow = 3, ncol = 1,
                          common.legend = FALSE,
                          widths = c(1, 0.2, 1),
                          heights = c(1, 0.2, 1),
                          legend = "bottom")

alpha_beta_diversity

ggsave(filename = file.path(path, "figures/figure3.png"), plot = alpha_beta_diversity, dpi=300, units=c("mm"), width=300, height=275)


# Alpha and beta diversity plots used in defense talk
# defense_diversity <-
#   ggarrange(
#     "",
#     "",
#     hill1_species,
#     hill1_beta,
#     nrow = 2,
#     ncol = 2,
#     heights = c(0.1, 1),
#     common.legend = FALSE,
#     legend = "bottom",
#     labels = c("Alpha diversity", "Beta diversity", "", "")
#   )
# defense_diversity
#
# ggsave(filename = file.path(path, "figures/defense_diversity.png"), plot = defense_diversity, dpi=300, units=c("mm"), width=275, height=225)

```



## Figure 4

```{r, figure4}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 7
#| label: dbrda_plot
#| fig-cap: "FEF community composition association to all cross-types, habitat types, and leaf lobing index (LBI) in reciprocal transplant experiment. Distance-based Redundancy Analysis (dbRDA) plot of rarefied FEF community and leaf functional traits by species. A) Each cluster of points represents a rarefied FEF community sample from one host cross-type; red filled points correspond to F~2~GL (hybrid), orange to G (*M. guttatus* parental line), yellow to L (*M. laciniatus* parental line), and light blue point to F~2~LG (hybrid). Shapes correspond to habitat types:  open squares represent Meadow 1, opencircles Meadow 2, and open triangles Granite 1. B) Purple filled points correspond to Meadow 1 habitat, teal represents Meadow 2 and green Granite 1. Open shapes represent cross-types: open square F~2~GL (hybrid), open circles G (*M. guttatus* parental line), open triangles L (*M. laciniatus* parental line), and corsses F~2~LG (hybrid)Point shapes correspond to host species. Solid arrow lines represent significant associations (*p* < .01), while dashed lines represent non-significant associations. The length and direction of the arrows indicate the strength and direction of the association between the traits and the FEF community composition. The labels on the arrows correspond to the leaf functional traits, habitats and cross-types. Ellipses represent 95% confidence intervals. The plot is based on the Bray-Curtis dissimilarity matrix."

##########################
######## Labels ##########
##########################
habitat_labels <- c("Meadow 1", "Meadow 2", "Granite 1")
labels_list <- c("F~2~GL", "G", "L", "F~2~LG")
names(labels_list) <- c("F2GL", "G", "L", "F2LG")


# dbRDA using Elevation as continuous variable
#logACI + logLT + logLPS + logLMA +
#final_model <- readRDS("clean_data/statistics/m3_hell.rds")


# names(final_model)
finalm_summary <- summary(final_model)


# Extracting scores for the plot
ordination_scores <- as.data.frame(vegan::scores(final_model)$sites)

# Extracting names for the plot
ordination_names <- rownames(ordination_scores)

# Row names to column
ordination_scores$Unique_ID <- rownames(ordination_scores)

# Subset for the plot
dbrda_df <- plant_traits_rfy

# Merge scores with trait data
merged_data <- right_join(ordination_scores, dbrda_df, by = c("Unique_ID" = "X"))

# Extracting scores for arrows
arrow_scores <- as.data.frame(vegan::scores(final_model, display = "bp"))

# Define the arrow aesthetic mapping
arrow_map <- aes(
  xend = (dbRDA1 * 2),
  yend = (dbRDA2 * 2),
  x = 0,
  y = 0,
  shape = NULL,
  color = NULL,
  fill = NULL
)
label_map <- aes(
  x = 2 * dbRDA1,
  y = 2 * dbRDA2,
  label = row.names(arrow_scores),
  shape = NULL,
  color = NULL,
  fill = NULL
)
arrowhead = arrow(length = unit(0.02, "npc"))

#subset A4 for labeling
arrow_scores <- arrow_scores[order(rownames(arrow_scores)), ]
A4 <- lapply(1:12, function(i)
  arrow_scores[i, ])

# A4.sub1 <- arrow_scores[1,] #Elevation
# A4.sub2 <- arrow_scores[2,] #ACi
# A4.sub3 <- arrow_scores[3,] #LBI
A4.sub4 <- arrow_scores[4,] #logLBI
# A4.sub5 <- arrow_scores[5,] #LPS
# A4.sub6 <- arrow_scores[6,] #LT.


# dbRDA plot based on species
full_final_model <- ggplot(data = merged_data, aes(x = dbRDA1, y = dbRDA2)) +
  geom_point(
    data = merged_data,
    aes(color = Genotype, shape = Habitat),
    size = rel(4),
    alpha = 0.2,
    stroke = 1
  ) +
  stat_ellipse(
    aes(color = Genotype),
    geom = "path",
    linewidth = 1.7,
    position = "identity",
    type = "t",
    linetype = 1,
    level = 0.95,
    segments = 51,
    na.rm = FALSE,
    show.legend = NA,
    inherit.aes = TRUE
  ) +
  geom_segment(
    arrow_map,
    size = rel(.8),
    data = arrow_scores,
    color = "black",
    arrow = arrowhead
  ) +
  geom_vline(xintercept = 0,
             color = "grey30",
             linetype = "dashed") + # plot vertical line
  geom_hline(yintercept = 0,
             color = "grey30",
             linetype = "dashed") + # plot horizontal line
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[1]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("F2LG"),
    alpha = 0.7,
    nudge_x = 0.15,
    nudge_y = -0.0,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[2]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("G"),
    alpha = 0.7,
    nudge_x = -0.1,
    nudge_y = -0.06,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[3]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("L"),
    alpha = 0.7,
    nudge_x = -0.1,
    nudge_y = 0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[4]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("Granite 1"),
    nudge_x = -0.3,
    nudge_y = 0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[5]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("G1:F2LG"),
    nudge_x = 0.3,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[6]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("G1:G"),
    alpha = 0.7,
    nudge_x = 0.0,
    nudge_y = 0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[7]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("G1:L"),
    alpha = 0.7,
    nudge_x = 0.1,
    nudge_y = -0.05,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[8]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("Meadow 2"),
    nudge_y = -0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[9]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("M2:F2LG"),
    nudge_x = 0.2,
    nudge_y = -0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[10]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("M2:G"),
    alpha = 0.7,
    nudge_x = -0.1,
    nudge_y = -0.12,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[11]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("M2:L"),
    alpha = 0.7,
    nudge_x = -0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[12]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("logLBI"),
    nudge_x = 0.35,
    nudge_y = 0.05,
    min.segment.length = Inf
  ) +
  xlab(label = paste(
    "dbRDA1 (",
    round(finalm_summary$concont$importance[2, 1] * 100, digits = 1),
    "%)",
    sep = ""
  )) +
  ylab(label = paste(
    "dbRDA2 (",
    round(finalm_summary$concont$importance[2, 2] * 100, digits = 1),
    "%)",
    sep = ""
  )) +
  scale_color_manual(
    labels = c("F~2~GL", "G", "L", "F~2~LG"),
    values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_shape_manual(values = c(0:3)) +
  theme_classic(base_size = 16) +
  theme(
    legend.title = element_text(face = "bold"),
    legend.text = element_markdown(),
    legend.position = "right",
    plot.caption = element_markdown(),
    plot.caption.position = "plot",
    strip.text = element_text(face = "bold")
  ) +
    guides(
    color = guide_legend(title = "Crosstype"),
    shape = guide_legend(title = "Habitat", override.aes = list(size = 4, alpha = 1))
  )

full_final_model

#ggsave(filename=file.path(path, "figures/dbRDA_full_model.png"), plot = full_final_model, dpi=600, units=c("mm"), width=150, height=150)

#####################################
# dbRDA using Habitat
#m3bdrda <- dbrda(asv_vegdist ~ logACI + logLT + logLPS + logLMA + logLBI + Elevation_cat, distance = "bray", data = ordi_traits, na.action = na.omit)

# dbRDA plot based on elevation
full_site_model <-  ggplot(data = merged_data, aes(x = dbRDA1, y = dbRDA2)) +
  geom_point(
    data = merged_data,
    aes(color = Habitat, shape = Genotype),
    size = rel(4),
    alpha = 0.2,
    stroke = 1
  ) +
  stat_ellipse(
    aes(color = Habitat),
    geom = "path",
    linewidth = 1.7,
    position = "identity",
    type = "t",
    linetype = 1,
    level = 0.95,
    segments = 51,
    na.rm = FALSE,
    show.legend = NA,
    inherit.aes = TRUE
  ) +
  geom_segment(
    arrow_map,
    size = rel(.8),
    data = arrow_scores,
    color = "black",
    arrow = arrowhead
  ) +
  geom_vline(xintercept = 0,
             color = "grey30",
             linetype = "dashed") + # plot vertical line
  geom_hline(yintercept = 0,
             color = "grey30",
             linetype = "dashed") + # plot horizontal line
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[1]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("F2LG"),
    alpha = 0.7,
    nudge_x = 0.15,
    nudge_y = -0.0,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[2]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("G"),
    alpha = 0.7,
    nudge_x = -0.1,
    nudge_y = -0.06,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[3]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("L"),
    alpha = 0.7,
    nudge_x = -0.1,
    nudge_y = 0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[4]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("Granite 1"),
    nudge_x = -0.3,
    nudge_y = 0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[5]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("G1:F2LG"),
    nudge_x = 0.3,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[6]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("G1:G"),
    alpha = 0.7,
    nudge_x = 0.0,
    nudge_y = 0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[7]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("G1:L"),
    alpha = 0.7,
    nudge_x = 0.1,
    nudge_y = -0.05,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[8]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("Meadow 2"),
    nudge_y = -0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[9]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("M2:F2LG"),
    nudge_x = 0.2,
    nudge_y = -0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[10]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("M2:G"),
    alpha = 0.7,
    nudge_x = -0.1,
    nudge_y = -0.12,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[11]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("M2:L"),
    alpha = 0.7,
    nudge_x = -0.1,
    min.segment.length = Inf
  ) +
  geom_text_repel(
    label_map,
    size = rel(4),
    data = A4[[12]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("logLBI"),
    nudge_x = 0.35,
    nudge_y = 0.05,
    min.segment.length = Inf
  ) +
  xlab(label = paste(
    "dbRDA1 (",
    round(finalm_summary$concont$importance[2, 1] * 100, digits = 1),
    "%)",
    sep = ""
  )) +
  ylab(label = paste(
    "dbRDA2 (",
    round(finalm_summary$concont$importance[2, 2] * 100, digits = 1),
    "%)",
    sep = ""
  )) +
  scale_color_manual(values = met.brewer(
    "Tsimshian",
    n = 4,
    type = "discrete",
    direction = -1
  )) +
  scale_shape_manual(labels = c("F~2~GL", "G", "L", "F~2~LG"),
                     values = c(0:3)) +
  scale_x_continuous(limits = c(-2.4, 3), breaks = c(-2:3)) +
  theme_classic(base_size = 12) +
  theme(
    legend.title = element_text(face = "bold"),
    legend.text = element_markdown(),
    legend.position = "right",
    plot.caption = element_markdown(),
    plot.caption.position = "plot",
    strip.text = element_text(face = "bold")
  ) +
  labs(caption = "PERMDISP: *F*<sub>1, 14088</sub> = 471.62, *p* = .001") +
  guides(
    color = guide_legend(title = "Habitat"),
    shape = guide_legend(title = "Crosstype", override.aes = list(size = 4, alpha = 1))
  )

full_site_model

# Joining plots
double_dbrda <- ggarrange(
  full_final_model,
  "",
  full_site_model,
  ncol = 1,
  nrow = 3,
  heights = c(1, 0.1, 1),
  widths = c(1, 0.1, 1),
  labels = c("A", "B"),
  common.legend = F,
  legend = "right"
)

double_dbrda
#Save the plot
ggsave(
  file.path(path, "figures/figure4.png"),
  plot = double_dbrda,
  dpi = 300,
  units = c("mm"),
  width = 200,
  height = 250
)
```

## Figure 5


```{r, hybrid_model}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 6
#| label: hybrid_model
#| fig-cap: "FEF community composition association to hybrid cross-types, habitat, and leaf lobing index (LBI) in reciprocal transplant experiment. Distance-based Redundancy Analysis (dbRDA) plot of rarefied FEF community and leaf functional traits by species. A) Each cluster of points represents a rarefied FEF community sample from one host cross-type; red filled points correspond to F~2~GL (hybrid), and light blue point to F~2~LG (hybrid). Shapes correspond to habitat types:  open squares represent Meadow 1, open circles Meadow 2, and open triangles Granite 1. Solid arrow lines represent significant associations (*p* < .01), while dashed lines represent non-significant associations. The length and direction of the arrows indicate the strength and direction of the association between the traits and the FEF community composition. The labels on the arrows correspond to the leaf functional traits, habitats and cross-types. Ellipses represent 95% confidence intervals. The plot is based on the Bray-Curtis dissimilarity matrix."

##########################
######## Labels ##########
##########################
habitat_labels <- c("Meadow 1", "Meadow 2", "Granite 1")
labels_list <- c("F~2~GL", "G", "L", "F~2~LG")
names(labels_list) <- c("F2GL", "G", "L", "F2LG")

hybrid_model <-readRDS("clean_data/statistics/m2_hybrids_hell.rds")

hb_summary <- summary(hybrid_model)

# Extracting scores for the plot
ordination_scores <- as.data.frame(vegan::scores(hybrid_model)$sites)

# Extracting names for the plot
ordination_names <- rownames(ordination_scores)

# Row names to column
ordination_scores$Unique_ID <- rownames(ordination_scores)

# Subset for the plot
dbrda_df <- plant_traits_rfy |>
  filter(X %in% ordination_names, Genotype == "F2LG" |
           Genotype == "F2GL") # Extra filtering to remove parentals

# Merge scores with trait data
merged_data <- right_join(ordination_scores, dbrda_df, by = c("Unique_ID" = "X"))

# Extracting scores for arrows
arrow_scores <- as.data.frame(vegan::scores(hybrid_model, display = "bp"))

# Define the arrow aesthetic mapping
arrow_map <- aes(
  xend = (dbRDA1 * 2),
  yend = (dbRDA2 * 2),
  x = 0,
  y = 0,
  shape = NULL,
  color = NULL,
  fill = NULL
)
label_map <- aes(
  x = 2 * dbRDA1,
  y = 2 * dbRDA2,
  label = row.names(arrow_scores),
  shape = NULL,
  color = NULL,
  fill = NULL
)
arrowhead = arrow(length = unit(0.02, "npc"))

#subset A4 for labeling
arrow_scores <- arrow_scores[order(rownames(arrow_scores)), ]
A4 <- lapply(1:6, function(i)
  arrow_scores[i, ])

# A4.sub1 <- arrow_scores[1,] #Elevation
# A4.sub2 <- arrow_scores[2,] #ACi
# A4.sub3 <- arrow_scores[3,] #LBI
A4.sub4 <- arrow_scores[4, ] #logLBI
# A4.sub5 <- arrow_scores[5,] #LPS
# A4.sub6 <- arrow_scores[6,] #LT.

# dbRDA plot based on species
hybrid_model_plot <- ggplot(data = merged_data, aes(x = dbRDA1, y = dbRDA2)) +
  geom_point(
    data = merged_data,
    aes(color = Genotype, shape = Site),
    size = rel(4),
    alpha = 0.2,
    stroke = 1
  ) +
  stat_ellipse(
    aes(color = Genotype),
    geom = "path",
    linewidth = 1.7,
    position = "identity",
    type = "t",
    linetype = 1,
    level = 0.95,
    segments = 51,
    na.rm = FALSE,
    show.legend = NA,
    inherit.aes = TRUE
  ) +
  geom_segment(
    arrow_map,
    size = rel(.8),
    data = arrow_scores,
    color = "black",
    arrow = arrowhead
  ) +
  geom_vline(xintercept = 0,
             color = "grey30",
             linetype = "dashed") + # plot vertical line
  geom_hline(yintercept = 0,
             color = "grey30",
             linetype = "dashed") + # plot horizontal line
  geom_text(
    label_map,
    size = rel(4),
    data = A4[[1]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("F2LG"),
    hjust = 1.2
  ) +
  geom_text(
    label_map,
    size = rel(4),
    data = A4[[4]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("logLBI"),
    hjust = -0.1
  ) +
  geom_text(
    label_map,
    size = rel(4),
    data = A4[[5]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("Meadow 1"),
    hjust = -0.2
  ) +
  geom_text(
    label_map,
    size = rel(4),
    data = A4[[6]],
    fontface = "bold",
    show.legend = FALSE,
    label = c("Granite 1"),
    vjust = -0.3,
    hjust = 1.2
  ) +
  xlab(label = paste(
    "dbRDA1 (",
    round(hb_summary$concont$importance[2, 1] * 100, digits = 1),
    "%)",
    sep = ""
  )) +
  ylab(label = paste(
    "dbRDA2 (",
    round(hb_summary$concont$importance[2, 2] * 100, digits = 1),
    "%)",
    sep = ""
  )) +
  scale_color_manual(labels = labels_list, values = c("#a00e00",  "#0086a8")) +
  scale_shape_manual(values = c(0:3), labels = habitat_labels) +
  theme_classic(base_size = 12) +
  theme(
    legend.title = element_text(face = "bold"),
    legend.text = element_markdown(),
    legend.position = "right",
    plot.caption = element_markdown(),
    plot.caption.position = "plot",
    strip.text = element_text(face = "bold")
  ) +
  labs(caption = "PERMDISP: *F*<sub>1, 11548</sub> = 0.034, *p* = .85") +
  guides(
    color = guide_legend(title = "Crosstype"),
    shape = guide_legend(title = "Habitat", override.aes = list(size = 4, alpha = 1))
  )


hybrid_model_plot

ggsave(
  filename = file.path(path, "figures/figure5.png"),
  plot = hybrid_model_plot,
  dpi = 300,
  units = c("mm"),
  width = 150,
  height = 150
)
```



## Figure 6

```{r, figure6}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 6
#| label: lbi_boxplot
#| fig-cap: "Change in log-transformed leaf lobe index (LBI) by cross-type and habitat. A) Compares logLBI means between cross-types and is facetted by habitat category (*n* = 793). B) Compares logLBI means between habitat types (*n* = 793). Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)]."

# Comparisons and labels
my_comparisons <- list(
  c("F2LG", "L"),
  c("F2LG", "G"),
  c("F2GL", "L"),
  c("F2GL", "G"),
  c("G", "L"),
  c("F2GL", "F2LG")
)
my_comparisons2 <-
  list(c("Meadow 2", "Meadow 1"),
       c("Meadow 2", "Granite 1"),
       c("Meadow 1", "Granite 1"))

labels_list <- c("F~2~GL", "G", "L", "F~2~LG")
names(labels_list) <- c("F2GL", "G", "L", "F2LG")

#ggpubr package used for comparisons tests
lbi_compare_means <-
  wilcox_test(data = plant_traits |>
                group_by(Habitat),
    LBI ~ Genotype,
    comparisons = my_comparisons,
    p.adjust.method = "BH",
    paired = FALSE,
    alternative = "two.sided",
    mu = 0,
    conf.level = 0.95
  )

lbi_compare_means2 <- plant_traits %>%
  compare_means(data = .,
    LBI ~ Genotype, 
    group.by = "Habitat",
    comparisons = my_comparisons,
    method = "wilcox.test",
    p.adjust.method = "BH",
    paired = FALSE,
    alternative = "two.sided",
    mu = 0,
    conf.level = 0.95
  ) %>%
  add_significance(p.col = "p.adj") 

# These two functions, `compare_means` and `wilcox_test` are ALMOST equivalent. When p-values are adjusted we find that all comparison are not significant for `compare_means` function with method `wilcox.test`. However, when we use `wilcox_test` function, we find that 2 comparisons are significant. 

# I am reporting the p-values manually from the adjust values from the `compare_means` function.


#Report with `compare_means` because it is easier to plot with `ggpubr` package.
errbar_lims <- group_by(leaf_traits, Genotype) |>
              summarize(mean = mean(logLBI), se = sd(logLBI)/sqrt(n()),
                        upper = mean + (2*se), lower = mean - (2*se))



lbi_genotype <- ggplot(plant_traits, aes(y = logLBI, x = Genotype)) +
  geom_point(
    aes(color = Genotype),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Genotype), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(labels = labels_list,
    values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_fill_manual(labels = labels_list,
    values = met.brewer(
    "Johnson",
    n = 4,
    type = "discrete",
    direction = 1
  )) +
  theme_lfspp_discrete +
  labs(y = "log10(LBI)", x = "", caption = " ") +
  stat_pvalue_manual(
    lbi_compare_means2,
    hide.ns = TRUE, # Because all are "ns" in this case, y.position = 0
    y.position = 0,
    label = "p.adj.signif"
  ) +
  # stat_compare_means(
  #   comparisons = my_comparisons,
  #   method = "wilcox.test",
  #   label = "p.signif",
  #   hide.ns = TRUE,
  #   symnum.args = list(
  #     cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, Inf),
  #     symbols = c("****", "***", "**", "*", "")
  #   )
  # ) +
  facet_wrap( ~ Habitat) +
  guides(
    color = guide_legend(title = "Crosstype")
  ) 

#lbi_genotype
#ggsave(filename = file.path(path, "figures/figure4_genotype.svg"), plot = lbi_genotype, dpi=300, units=c("mm"), width=275, height=225)

#Tests
lbi_habitat_means <- plant_traits %>%
  compare_means(data = .,
    LBI ~ Habitat, 
    #group.by = "Genotype",
    comparisons = my_comparisons2,
    method = "wilcox.test",
    p.adjust.method = "BH",
    paired = FALSE,
    alternative = "two.sided",
    mu = 0,
    conf.level = 0.95
  ) %>%
  add_significance(p.col = "p.adj")


lbi_site <- ggplot(plant_traits, aes(y = logLBI, x = Habitat)) +
  geom_point(
    aes(color = Habitat),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Habitat),
               alpha = 0.5,
               outlier.alpha = 0.0) +
  scale_color_manual(values = met.brewer(
    "Tsimshian",
    n = 4,
    type = "discrete",
    direction = -1
  )) +
  scale_fill_manual(values = met.brewer(
    "Tsimshian",
    n = 4,
    type = "discrete",
    direction = -1
  )) +
  theme_lfspp_discrete +
  scale_y_continuous(limits = c(-1.75, .75), breaks = c(-1, 0, 1)) +
  labs(y = "log10(LBI)", x = "") +
  stat_pvalue_manual(
    lbi_habitat_means,
    hide.ns = TRUE,
    y.position = c(0.2, 0.5), #Because we have only 2 significant comparisons, y = 0.2, 0.5
    label = "p.adj.signif"
  ) 
  # stat_compare_means(comparisons = my_comparisons2,
  #                    method = "wilcox.test",
  #                    #label.y.npc = "top",
  #                    hide.ns = TRUE,
  #                    label.y = c(0.0, 0.2, 0.5),
  #                    label = "p.signif")
#  facet_wrap( ~ Genotype, labeller = labeller(Genotype = labels_list))

#lbi_site

# Joined plot


lbis <- ggarrange(
  lbi_genotype,
  lbi_site,
  nrow = 1,
  ncol = 2,
  widths = 1.2,
  heights = 1,
  common.legend = FALSE,
  legend = "bottom",
  labels = c("A", "B")
)
lbis

ggsave(
  filename = file.path(path, "figures/figure6.png"),
  plot = lbis,
  dpi = 300,
  units = c("mm"),
  width = 275,
  height = 225
)

# ggsave(
#   filename = file.path(path, "figures/figure6.svg"),
#   plot = lbis,
#   dpi = 300,
#   units = c("mm"),
#   width = 275,
#   height = 225
# )
```



# Supplementary Material
## Figure S1

::: {#fig-S1}
![Greenhouse cross-type design and reciprocal transplant design. Greenhouse hybrid crosses from parental lines in dashed line box. Reciprocal transplant design at each site in solid line boxes and ovals. Red squares represent F~2~GL hybrid cross. Light blue represents F~2~LG hybrid cross. Yellow represents *M. laciniatus* parental line, and organge representes *M. guttatus* parental line.  ](figures/supp_fig1_diagram.png){width="6in"}
:::


<!-- ## Figure S2 -->

<!-- ```{r, supp_fig2} -->
<!-- #| echo: false -->
<!-- #| eval: true -->
<!-- #| tidy: true -->
<!-- #| message: false -->
<!-- #| fig-width: 6 -->
<!-- #| fig-height: 6 -->
<!-- #| label: trait_correlation -->
<!-- #| fig-cap: "Summary statistics of leaf lobe index (LBI) traits for each cross-type." -->


<!-- t4 <- trans_env$new(dataset = micro_psclean, env_cols = c(12)) # 12 is the index for logLBI -->

<!-- t4gg <- -->
<!--   t4$cal_autocor(group = c("Genotype"), -->
<!--                  upper = list(continuous = GGally::wrap("cor", method = "spearman"))) + -->
<!--   theme( -->
<!--     legend.title = element_text(face = "bold"), -->
<!--     strip.text = element_text(face = "bold", size = 12), -->
<!--     panel.border = element_rect(linetype = "blank", fill = NA) -->
<!--   ) + -->
<!--   scale_fill_manual(values = met.brewer( -->
<!--     "Johnson", -->
<!--     n = 4, -->
<!--     type = "discrete", -->
<!--     direction = c(-1) -->
<!--   )) + -->
<!--   scale_color_manual(values = met.brewer( -->
<!--     "Johnson", -->
<!--     n = 4, -->
<!--     type = "discrete", -->
<!--     direction = c(-1) -->
<!--   )) -->
<!-- t4gg -->

<!-- ggplot2::ggsave(file.path(path, "figures/supp_fig2.png") , plot = t4gg, dpi=300, units=c("mm"), width=300, height=300) -->
<!-- ``` -->


## Figure S2

```{r, supp_fig2}
#| echo: false
#| eval: true
#| tidy: true
#| message: false
#| fig-width: 6
#| fig-height: 6
#| label: heatmap
#| fig-cap: "Heatmap of the top 10 most abundant genera in the dataset. The heatmap is faceted by habitat type and cross-type."

# Plot with micro_psclean
t2 <- trans_abund$new(dataset = micro_psclean, taxrank = "Genus", ntaxa = 10) # 12 is the index for logLBI
t2gg <-
  t2$plot_heatmap(
    facet = c("Habitat", "Genotype"),
    xtext_keep = FALSE,
    withmargin = FALSE
  ) +
  ggtitle("Un-rarified data") +
  theme(
    legend.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold", size = 12),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_blank()
  )
#facet_nested(~factor(Site, levels =  c('LM', 'CF', 'OPN')),  nest_line = element_line(linetype = 2))

#t2gg




r2 <-
  trans_abund$new(dataset = micro_rarefied_ps,
                  taxrank = "Genus",
                  ntaxa = 10)
r2gg <-
  r2$plot_heatmap(
    facet = c("Habitat", "Genotype"),
    xtext_keep = FALSE,
    withmargin = FALSE
  ) +
  ggtitle("Rarified data") +
  theme(
    legend.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold", size = 12),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_blank()
  )

#r2gg
ggsave(filename = file.path(path, "figures/supp_fig3_rarefied_only.png"), plot = r2gg, dpi=300, units=c("mm"), width=300, height=250)

# Joined heatplots
heatplots <- ggarrange(t2gg, r2gg, ncol = 1, nrow = 2,
                           common.legend = TRUE,
                           legend = "bottom",
                           labels = c("A", "B"),
                           heights = c(1, 1))
heatplots

# Save the plot
ggplot2::ggsave(filename = file.path(path, "figures/supp_fig2.png"), plot = heatplots, dpi=300, units=c("mm"), width=300, height=250)
```

## Figure S3

```{r, supp_fig3}

#| echo: false
#| eval: true
#| tidy: true
#| message: false
#| fig-width: 6
#| fig-height: 6
#| label: boxplot_hill_orders
#| fig-cap: "Alpha diversity mean comparisons in cross-types facetted habitat types. Alpha diversity means comparisons; A) Observed ASV richness (𝑞 = 0); B) Shannon's entropy (𝑞 = 1); and C) Inverse Simpson's index (𝑞 = 2) per host species. A-C) Red filled boxplots correspond to F2YW, orange filled to G (*M. guttatus*), yellow to L (*M. laciniatus*), and teal to F2WY cross-type. Beta diversity mean comparions; A) Observed ASV richness (𝑞 = 0); B) Shannon's entropy (𝑞 = 1); and C) Inverse Simpson's index (𝑞 = 2)per elevation category. D-F) Light teal filled boxplot corresponds to Meadow 1, purple to Meadow 2, and light maroon to Granite 1. Open shapes represent: squares (F2YW), circles (G), triangles (L), and crosses (F2WY).  Significance levels are represented by *ns* (not significant) and asterisks [*p* < .05 (\\*), *p* < .01 (\\*\\*), *p* < .001 (\\*\\*\\*), and *p* < .0001 (\\*\\*\\*\\*)]."

############################################
#### Alpha diversity ####
#### At the species level ####
############################################

########## Labels ###########
#Legend title label
legend_title <- "Species"
# Species labels
labels_list <- c("M. laciniatus", "M. nasutus", "M. guttatus")
names(labels_list) <- c("L", "N", "G")
#############################
# compare_means(hill_2 ~ Site,
#          data = plant_traits,
#          group.by = "Genotype",
#          method = "wilcox.test",
#          p.adjust.method = "BH",
#   paired = FALSE,
#   alternative = "two.sided",
#   mu = 0,
#   var.equal = FALSE,
#   conf.level = 0.95)



# Plot
hill0_species <-ggplot(data = plant_traits_rfy,
                        aes(x = Genotype, y = Observed)) +
  geom_point(
    aes(color = Genotype),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Genotype), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_fill_manual(values = met.brewer(
    "Johnson",
    n = 4,
    type = "discrete",
    direction = 1
  )) +
  theme_div_discrete +
  theme_classic(base_size = 16) +
   theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "bold", size = 14),
         panel.border = element_rect(linetype = "blank", fill = NA),
         axis.text.x = element_blank()) +
  labs(y =  "\U1D492 = 0", x = "", col = "") +
  guides(color = guide_legend(title = "Genotype")) +
  facet_grid(~Habitat) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     label = "p.signif")

#hill0_species


# Hill number 1
# Shannon diversity or hill number 1
# Plot
hill1_species <- ggplot(data = plant_traits_rfy,
                        aes(x = Genotype, y = hill_1)) +
  geom_point(
    aes(color = Genotype),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Genotype), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_fill_manual(values = met.brewer(
    "Johnson",
    n = 4,
    type = "discrete",
    direction = 1
  )) +
  #scale_color_manual(aes(color = "black")) +
  theme_sppdiv_discrete +
  theme(strip.text = element_blank()) +
  labs(y =  "\U1D492 = 1", x = "", col = "") +
  guides(color = guide_legend(title = "Genotype")) +
  facet_grid(~Habitat) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     label = "p.signif")

#hill1_species


# Hill number 2
# Inverse Simpson diversity or hill number 2
hill2_species <- ggplot(data = plant_traits_rfy,
                        aes(x = Genotype, y = hill_2)) +
  geom_point(
    aes(color = Genotype),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Genotype), alpha = 0.5, outlier.alpha = 0.0) +
  # geom_crossbar(stat="summary",
  #               fun = median,
  #               fun.max = median,
  #               fun.min = median,
  #               fatten = 2,
  #               width = 0.8,
  #               color="black") +
  scale_color_manual(values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_fill_manual(values = met.brewer(
    "Johnson",
    n = 4,
    type = "discrete",
    direction = 1
  )) +
  #scale_color_manual(aes(color = "black")) +
  theme_sppdiv_discrete +
  theme(strip.text = element_blank()) +
  labs(y =  "\U1D492 = 2", x = "", col = "") +
  guides(color = guide_legend(title = "Genotype")) +
  facet_grid(~Site) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     label = "p.signif")

#hill2_species

# Joined plots
supp_fig4 <- ggarrange(hill0_species,"", hill1_species,"", hill2_species,
                                  nrow = 5, ncol = 1,
                       heights = c(1, 0.1, 1, 0.1, 1),
                                  common.legend = TRUE,
                                  labels = c("A","", "B","", "C"),
                                  legend = "bottom")

supp_fig4
ggsave(filename = file.path(path, "figures/supp_fig3.png"), plot = supp_fig4, dpi=300, units=c("mm"), width=250, height=275)

```


## Figure S4

```{r, supp_fig4}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 6
#| fig-caption: "Map of reciprocal transplant sites in Yosemite National Park. Sampling sites are color-coded by habitat type. Granite 1 (green), Meadow 1 (purple), and Meadow 2 (teal). Granite 2 (open-crossed circle) was not sampled."

# Map of sampling sites
#https://irma.nps.gov/DataStore/Reference/Profile/2301294
#https://catalog.data.gov/dataset/yosemite-national-park-tract-and-boundary-data-c453b

#GOOGLE_SECRET <- Sys.getenv("GGMAP_GOOGLE_API_KEY")
#register_google(key ='GOOGLE_SECRET', write = TRUE)

map_latlong <- data.frame(
  Habitat = c("Meadow 1", "Meadow 2", "Granite 1"), #, "Granite 2"),
  Latitude = c(37.767781, 37.755968, 37.810700), #, 37.843702),
  Longitude = c(-119.772720, -119.803031, -119.485200) #, -119.573120)
)

granite2 <- data.frame(
  Habitat = c("Granite 2"),
  Latitude = c(37.843702),
  Longitude = c(-119.573120)
)

mappops <- get_map(
  location = c(
    lon =
      mean(map_latlong$Longitude),
    lat =
      mean(map_latlong$Latitude)
  ),
  zoom = 10,
  maptype = "terrain",
  scale = 4
)
#nc <- sf::st_read("/home/baponte/Boxx/Dissertation/Mimulus/GPS_data/YOSE/yose_boundary.shp", quiet = TRUE) Attempt at doing it over a shapefile

map <- ggmap(mappops, extent = "device", darken = c(0.3, "white")) +
  coord_sf(
    xlim = c(-119.9, -119.4),
    ylim = c(37.6, 37.9),
    crs = 4326,
    expand = TRUE
  ) +
  geom_point(
    data = map_latlong,
    aes(x
        = Longitude, y = Latitude, fill =
          Habitat),
    size = 4,
    shape = 21,
    alpha = 0.75
  ) +
  geom_point(
    data = granite2,
        aes(x
        = Longitude, y = Latitude, fill =
          Habitat),
    size = 4,
    shape = 13,
    alpha = 0.75
  ) +
  scale_fill_manual(values = c("#318f49","black", "#473d7d", "#0cb4bb")) +
  theme_classic(base_size = 12) +
  theme(
    legend.title = element_text(face = "bold"),
    legend.text = element_text(size = 10),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_text(size = 10),
    axis.text.y = element_text(size = 10)
  ) +
  ylab("Latitude") +
  xlab("Longitude") +
  annotation_north_arrow(
    location = "tr",
    which_north = "true",
    height = unit(0.7, "cm"),
    width = unit(0.7, "cm"),
  )


plot(map)
ggsave(
  "figures/supp_fig4.png",
  plot = map,
  units = "in",
  width = 6,
  height = 6,
  dpi = 600
)
```

<!-- ## Figure S5 -->

<!-- ```{r, supp_fig5} -->
<!-- #| echo: false -->
<!-- #| eval: true -->
<!-- #| tidy: true -->
<!-- #| warning: false -->
<!-- #| label: boxplot_hill_orders -->
<!-- #| fig-cap: "Alpha and beta diversity means comparisons in cross-types by habitat types. Alpha diversity means comparisons; A) Observed ASV richness (𝑞 = 0); B) Shannon's entropy (𝑞 = 1); and C) Inverse Simpson's index (𝑞 = 2) per host species. A-C) Red filled boxplots correspond to F2YW, orange filled to G (*M. guttatus*), yellow to L (*M. laciniatus*), and teal to F2WY cross-type. Beta diversity mean comparions; A) Observed ASV richness (𝑞 = 0); B) Shannon's entropy (𝑞 = 1); and C) Inverse Simpson's index (𝑞 = 2)per elevation category. D-F) Light teal filled boxplot corresponds to Meadow 1, purple to Meadow 2, and light maroon to Granite 1. Open shapes represent: squares (F2YW), circles (G), triangles (L), and crosses (F2WY).  Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]." -->
<!-- ################################# -->
<!-- #### Beta diversity #### -->
<!-- #### Across sites #### -->
<!-- ################################# -->

<!-- ########## Labels ########### -->
<!-- #Legend title label -->
<!-- legend_title <- "Species" -->
<!-- # Species labels -->
<!-- labels_list <- c("M. laciniatus", "M. nasutus", "M. guttatus") -->
<!-- names(labels_list) <- c("L", "N", "G") -->
<!-- ############################# -->

<!-- # Observed richness -->
<!-- # Hill number 0 -->
<!-- hill0_beta <- -->
<!--   ggplot(plant_traits_rfy, aes(x = Habitat, y = Observed)) + -->
<!--   geom_point( -->
<!--     aes(shape = Genotype, color = Habitat), -->
<!--     alpha = 0.5, -->
<!--     size = 1.7, -->
<!--     position = position_jitter(w = 0.2) -->
<!--   )+ -->
<!--   geom_boxplot(aes(color = Habitat), alpha = 0.5, outlier.alpha = 0.0) + -->
<!--   scale_color_manual( -->
<!--     labels = c('Crane Flat', 'Little Meadow', 'Olmstead Point'), -->
<!--     values = met.brewer( -->
<!--      "Tsimshian", -->
<!--       n = 4, -->
<!--       type = "discrete", -->
<!--       direction = -1 -->
<!--     ) -->
<!--   ) + -->
<!--   scale_shape_manual( -->
<!--     values = c(21:24), -->
<!--   ) + -->
<!--   theme_div_discrete + -->
<!--   scale_x_discrete(labels = c('', '', '', '')) + -->
<!--   stat_compare_means(comparisons = my_comparisons2, -->
<!--                      method = "wilcox.test", -->
<!--                      label = "p.signif") + -->
<!--   labs(y = "\U1D492 = 0", x = "") + -->
<!--   facet_grid(~Site) + -->
<!--   guides(fill = guide_legend(title = "Habitat"), -->
<!--          shape = guide_legend(title = "Genotype")) -->

<!-- #hill0_beta -->



<!-- # Hill number 1 -->
<!-- # Shannon diversity or hill number 1 -->
<!-- hill1_beta <- ggplot(plant_traits_rfy, aes(x = Habitat, y = hill_1)) + -->
<!--   geom_point( -->
<!--     aes(shape = Genotype, color = Habitat), -->
<!--     alpha = 0.5, -->
<!--     size = 1.7, -->
<!--     position = position_jitter(w = 0.2) -->
<!--   )+ -->
<!--   geom_boxplot(aes(color = Habitat), alpha = 0.5, outlier.alpha = 0.0) + -->
<!--   scale_color_manual( -->
<!--     labels = c('Crane Flat', 'Little Meadow', 'Olmstead Point'), -->
<!--     values = met.brewer( -->
<!--       "Tsimshian", -->
<!--       n = 4, -->
<!--       type = "discrete", -->
<!--       direction = -1 -->
<!--     ) -->
<!--   ) + -->
<!--   scale_shape_manual( -->
<!--     values = c(21:24), -->
<!--   ) + -->
<!--   theme_div_discrete + -->
<!--   scale_x_discrete(labels = c('', '', '', '')) + -->
<!--   stat_compare_means(comparisons = my_comparisons2, -->
<!--                      method = "wilcox.test", -->
<!--                      label = "p.signif") + -->
<!--   labs(y = "\U1D492 = 1", x = "") + -->
<!--   guides(fill = guide_legend(title = "Habitat"), -->
<!--          shape = guide_legend(title = "Genotype")) + -->
<!--     facet_grid(~Site)  -->

<!-- #hill1_beta -->


<!-- # Hill number 2 -->
<!-- # Inverse Simpson diversity or hill number 2 -->

<!-- hill2_beta <- ggplot(plant_traits_rfy, aes(x = Habitat, y = hill_2)) + -->
<!--   geom_point( -->
<!--     aes(shape = Genotype, color = Habitat), -->
<!--     alpha = 0.5, -->
<!--     size = 1.7, -->
<!--     position = position_jitter(w = 0.2) -->
<!--   ) + -->
<!--   geom_boxplot(aes(color = Habitat), alpha = 0.5, outlier.alpha = 0.0) + -->
<!--   # geom_crossbar(stat="summary", -->
<!--   #               fun = mean, -->
<!--   #               fun.max = mean, -->
<!--   #               fun.min = mean, -->
<!--   #               fatten = 2, -->
<!--   #               width = 0.5, -->
<!--   #               color="black") + -->
<!--   scale_color_manual( -->
<!--     labels = c('Crane Flat', 'Little Meadow', 'Olmstead Point'), -->
<!--     values = met.brewer( -->
<!--       "Tsimshian", -->
<!--       n = 4, -->
<!--       type = "discrete", -->
<!--       direction = -1 -->
<!--     ) -->
<!--   ) + -->
<!--    scale_fill_manual( -->
<!--     #labels = c('Crane Flat', 'Little Meadow', 'Olmstead Point'), -->
<!--     values = met.brewer( -->
<!--       "Tsimshian", -->
<!--       n = 4, -->
<!--       type = "discrete", -->
<!--       direction = -1 -->
<!--     ) -->
<!--   ) + -->
<!--   scale_shape_manual( -->
<!--     values = c(0:3), -->
<!--   ) + -->
<!--   theme_div_discrete + -->
<!--   scale_x_discrete(labels = c('', '', '', '')) + -->
<!--   stat_compare_means(comparisons = my_comparisons2, -->
<!--                      method = "wilcox.test", -->
<!--                      label = "p.signif") + -->
<!--   labs(y = "\U1D492 = 2", x = "") + -->
<!--   guides(fill = guide_legend(title = "Habitat"), -->
<!--          shape = guide_legend(title = "Genotype", alpha = 1)) + -->
<!--   facet_grid(~Site) -->


<!-- #hill2_beta -->


<!-- # Joining plots -->
<!-- hill_beta <- ggarrange(hill0_beta, hill1_beta, hill2_beta, -->
<!--           nrow = 1, ncol = 3, -->
<!--           common.legend = TRUE, -->
<!--           legend = "bottom", -->
<!--           labels = c("D", "E", "F")) -->

<!-- supp_fig5 -->

<!-- ggsave(filename = file.path(path, "figures/supp_fig5.png"), plot = supp_fig5, dpi=300, units=c("mm"), width=300, height=275) -->
<!-- ``` -->




## Table 1

```{r, supp_table1}
#Sites and Species sampled
core_tax <-
  core_members(
    ps_clean_3,
    detection = 0.1 / 100,
    prevalence = 50 / 100,
    include.lowest = FALSE
  )

supp_table1 <- metagMisc::phyloseq_to_df(ps_clean_3) |>
  filter(OTU %in% core_tax) |>
  mutate(across(Kingdom:Species, ~ str_remove(., "^.*?(_|-)."))) |>
  select(OTU, Kingdom:Species) |>
  knitr::kable(caption = "Table 1: Core taxa members detected in unrarified data at a 1% threshold and 50% prevalence in samples.")
supp_table1

#save_kable(file.path(path, "tables/supp_table1.txt"), table1)

#The core taxa members are "ASV_1", "ASV_2", "ASV_3", "ASV_4", "ASV_5", "ASV_6", "ASV_7", "ASV_8", "ASV_9", "ASV_11", "ASV_12", "ASV_14", "ASV_16", "ASV_18", "ASV_19", "ASV_21", "ASV_23", "ASV_27". #Like in MIM2 project, we see *Cladosporium* spp. (ASV_1), *Vishniacozyma victoriae* (ASV_2), and *Cladosporium herbanum* (ASV_27) and.
```

## Table 2

```{r, supp_table}
table2 <- phyloseq_ntaxa_by_tax(
  ps_clean_3,
  TaxRank = "Phylum",
  relative = F,
  add_meta_data = T
) |>
  as.data.frame() |>
  mutate(sum = sum(N.OTU),
         Phylum = str_remove(Phylum, "^.*?(_|-).")) |>
  group_by(Genotype, Phylum) |>
  summarise("Ocurrance in samples" = n()) |>
  knitr::kable(caption = "Table 2: Prevalence of phyla in samples per cross-type.")

table2
```

## Table 3
```{r}
#dbRDA table  (results are the same as adonis2 but without R2)
#anova_m3_hell_margin <- readRDS("clean_data/statistics/anova_m3_hell_margin.rds")
anova_m3_hell_term <- readRDS("clean_data/statistics/anova_m3_hell_term.rds")
anova_table1 <- tidy(anova_m3_hell_term)

huxtable(anova_table1) |>
  set_caption("Table 3: ANOVA table for the dbRDA model with all cross-types.")
knitr::kable(anova_table1, caption = "Table 3: ANOVA table for the dbRDA model with all cross-types.")
```


## Supplementary methods

### Illumina TruSeq adapters for ITS sequencing

The modified primers for the first PCR (adapter ligation and ITS1 amplification) were as follows: 5’-CAC TCT TTC CCT ACA CGA CGC TCT TCC GAT CTC TTG GTC ATT TAG AGG AAG TAA-3’ (forward) and 5’-GTG ACT GGA GTT CAG ACG TGT GCT CTT CCG ATC TGC TGC GTT CTT CAT CGA TGC-3’ (reverse).

See [@gardes1993] and [@inbook] for more details.

### IDT BestRAD barcodes and *i5* custom oligos

####BestRAD adaptors:
Top oligo 
Anatomy: biotin spacer SbfI barcode overhang 
Sequence: /5Biosg/GTACGT CCTGCAGG NNNNNNN TGCA 
Bottom oligo 
Sequence: /5Phos/NNNNNNN CCTGCAGG ACGTAC 


#### BestRAD *i5*

5'-AAT GAT ACG GCG ACC ACC GAG ATC TAC ACN NNN NNN NAC ACT CTT TCC CTA CAC GAC GCT CTT CCG ATC*T-3’




```{r, supp_table2}

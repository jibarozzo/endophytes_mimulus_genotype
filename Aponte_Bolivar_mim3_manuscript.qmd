---
title: "[Working title]: Yellow monkeflower host genetics and phenotype interactions with foliar fungal symbionts in common gardens"
date: last-modified
date-format: "MMMM D, YYYY"
bibliography: references.bib
csl: apa.csl
author:
  - name: Bolívar Aponte Rolón
    orcid: 0000-0002-2544-4551
    email: baponterolon@tulane.edu
    corresponding: true
    affiliations: 
      - ref: tu
        name: Tulane University
        department: Ecology and Evolutionary Biology
        city: New Orleans
        state: LA
        country: US
        url: www.tulane.edu
  - name: Kathleen G. Ferris
    email: kferris@tulane.edu
    corresponding: false
    affiliations: 
      - ref: tu
  - name: Sunshine A. Van Bael
    orcid: 0000-0001-7317-3533
    email: svanbael@tulane.edu
    corresponding: false
    affiliation: 
      - ref: tu
      
affiliations:
  - id: tu
    name: Department of Ecology and Evolutionary Biology, Tulane University, 6823 St. Charles Avenue, New Orleans, LA 70118

filters:
  - authors-block

format:
  # pdf:
  #   documentclass: scrartcl
  #   include-in-header:
  #       text: '\usepackage{lineno}\linenumbers'
  #   linestretch: 2.0
  #   margin-left: 1in
  #   margin-right: 1in
  #   margin-top: 1in
  #   margin-bottom: 1in
  #   mainfont: TeX Gyre Termes #Alternative to Times New Roman
  #   sansfont: TeX Gyre Termes #Another option is Liberation Serif
  #   number-sections: true
  #   citation-package: biblatex
  #   #keep_tex: true
  #   keep_md: true
  docx:
    reference-doc: custom-reference-doc.docx
    number-sections: true
    tbl-colwidths: true
    #linestretch: 2.0
    citation-package: biblatex
crossref:
  custom:
    - kind: float
      key: suppfig
      latex-env: suppfig
      reference-prefix: Fig. S
      space-before-numbering: false
      latex-list-of-description: Supplementary Figure
    
editor: source
execute:
  echo: false
warning: false
---

```{r, cleaning_shaping_data}
#| echo: false
#| eval: true
#| tidy: true

library("tidyverse")
library("data.table")
library("ggpubr")
library("ggfortify")
library("ggtext")
library("ggh4x")
library("ggpmisc")
library("broom")
library("MetBrewer")
library("rstatix")
library("readxl")

# Models
library("car")
library("nlme")

# Diversity
library("vegan")
library("hillR")
library("iNEXT")
library("geosphere")
library("indicspecies")

# Phyloseq friendly
#Some of these are redundant and have conflicts, but have functions that I like better than others or compliment each other.
library("phyloseq")
library("microeco") # New package for microbial analyses
library("file2meco") # File to microeco (phyloseq friendly)
library("metagMisc") # Miscellaneous functions
library("microbiome") # Expands phyloseq 
library("mirlyn")

library("conflicted")
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("alpha", "ggplot2")

# File path


path <- "../mim3_bioinformatics" # Change accordingly


# We will load the data sets and phyloseq objects here.
#### Load leaf traits master files ####
traits <-
  read_excel(
    file.path(
      path,
      "field_data/Mimulus_CH3_Endophytes_ReciprocalTransplant_2023.xlsx"
    ),
    sheet = "CH3_Leaf_traits"
  ) # Main raw data set
leaf_traits <- 
  readRDS(file.path(path, "clean_data/statistics/leaf_traits.rds"))
plant_traits <-
  readRDS(file.path(path, "clean_data/statistics/plant_traits.rds"))
plant_traits_rfy <-
  readRDS(file.path(path, "clean_data/statistics/plant_traits_rarefied.rds")) #Substitues ps_melt df


#### Phyloseq objects ####
#Phyloseq joins various objects that we have already prepare: taxonomic table, ASV table and our sample data.
#These are the data frames resulting from the phyloseq section in mim2_bioinformatics.qmd notebook.


#Load Phyloseq object cleaned of singletons (552 ASVs)
ps_clean_3 <-
  readRDS(file.path(
    path,
    "clean_data/taxonomy/ASV_8859_v2_phyloseq_nonsingletons.rds"
  ))
pseq_rrfa <-
  readRDS(file.path(path, "clean_data/statistics/pseq_rrfa.rds")) #Mirlyn object from Method B
rarefied_phyloseq <-
  readRDS(file.path(path, "clean_data/statistics/rarefied_phyloseq.rds"))

# Load ps_melt
#ps_melt <- readRDS(file.path(path, "clean_data/statistics/ps_melt.rds"))

#### Matrices ####
# Initial matrices, before rarefaction
# ASV abundance matrix
# Select randomized samples for beta diversity rarefaction
# A total of 282 samples
final_names_methodA <- sample_names(pseq_rrfa[[1]]) # Sample names

# # Matrix
# Simple Matrix of 84 samples from Method B pipeline
asv_matrix <- otu_table(ps_clean_3) |> # ASV matrix
  as.data.frame() |>
  select(contains(final_names_methodA)) |> # Samples from method B randomization
  as.matrix()

# Load rarefied matrix
rrfy_hell_matrix <-
  readRDS("clean_data/statistics/rrfy_hell_matrix.rds")

# Mean Hellinger transformation of rarefied data sets
# For Mantel tests
# set.seed(433)
# asv_avgdist <- avgdist(t(asv_matrix),
#                        sample = 750,
#                        distfun = vegdist,
#                        dmethod = "hellinger", #Transformation, later Bray_Curtis
#                        meanfun = mean,
#                        iterations = 50) |>
#   as.matrix()
#
# # Save
# saveRDS(asv_avgdist, file = "clean_data/statistics/asv_avgdist.rds")

# Load
asv_avgdist <- readRDS("clean_data/statistics/asv_avgdist.rds")


# Traits for dbRDA
dbrda_hell_matrix <- rrfy_hell_matrix |>
  column_to_rownames(var = "X") |>
  select(-c(1, 2:16))

dbrda_traits <- rrfy_hell_matrix |>
  select(X, Unique_ID, Site, Genotype, logLBI)


# Functions
source(file.path(path, "functions/alpha_rfy.R"))
source(file.path(path, "functions/pval_format.R"))

# Comparisons
my_comparisons <-
  list(
    c("F2WY", "L"),
    c("F2WY", "G"),
    c("F2YW", "L"),
    c("F2YW", "G"),
    c("G", "L"),
    c("F2YW", "F2WY")
  )
my_comparisons2 <-
  list(c("CF", "LM"), c("CF", "OPN"), c("LM", "OPN"))

# List of ASV samples
names_list <- colnames(ps_clean_3@otu_table) #List of samples
```

## Keywords

# Abstract

# Introduction

Evolutionary dynamics are significantly shaped by phenotypic plasticity and genetic adaptation, with both mechanisms playing crucial roles in facilitating plant survival and adaptation to a changing climate [@jump2005; @franks2013]. The effect of climate change on plastic and evolutionary responses is evident and accelerating [@franks2013; @ipcc2021]. Phenotypic plasticity and genetic adaptation are predicted to mitigate some of the effects of climate change, however, evidence supports that the rate of evolution may not keep pace with the rate of climate change, leading to the extinction of species [@urban2014]. The diversity and distribution of plants will be affected, resulting in "winners" and "losers" in optimally or ill-adapted to an uncertain climate future [@pecl2017]. Local adaptation and genetic variation have been extensively studied in the context of spatial and temporal changes in climate, but the role of symbiotic relationships in plant adaptation is less understood [@peay2016; @kivlin2022; @mojica2012; ADD OTHER CITES]. Plants' ability to adapt to novel environments has been facilitated by their symbiotic relationships with fungi and bacteria [reviewed in @peay2016; @remy1994]. From colonization of land by plants in consort with arbuscular mycorrhizal root mutualists aiding in nutrient acquisition [peay2016; @remy1994], to the benefits fungal symbionts provide against pathogen resistance [@mejia2008; @estrada2013; @rasmussen2008; @clay1996], and stress tolerance [@peay2016; CITE], the potential for fungi to enhance plant fitness is vast. Nonetheless, the potential benefits are contingent on host plant identity and genetics and the fungal functional guild observed [@kivlin2022; MORE CITE]. 

Foliar endophytic fungi (FEF) are a diverse group that live within plant leaves visibly asymptomatically [@arnold2007], but can alter plants' response to stressful environments, such as drought [@giauque2019; @giauque2013; @aimone2023], herbivory [@mejia2008; CITE], and pathogen damage [@mejia2014; @busby2016]. Hence, effectively expanding the host plants' phenotype through genetic and metabolic pathways [@hawkes2021; @kaddes2019]. In turn, host phenotype and genetics shape the foliar microbiomes [@tellezTraits2022; @kivlin2022; @vanwallendael2022; @horton2014]. A significant part of our knowledge of horizontally transmitted FEF communities and leaf traits derives from studies focused on a few selected genera or species with varying leaf traits along a growth vs. persistence gradient [@tellezTraits2022; @kitajima2013; @poorter2006; @wright2004]. This has enabled a deeper understanding of how leaf traits interact with FEF communities, but the role FEF play in the local adaptation and phenotypic plasticity of their hosts is less clear [@cordovez2019]. The ability to have genetic adaptation or plastic response that increases the potential for establishing beneficial symbionts, above or below-ground, can be crucial for plant survival and adaptation to changing environments.

The *Mimulus guttatus* species complex is an ideal system to study interactions between leaf phenotype, host genetics, and FEF communities [@twyford2015; @wu2008). It comprises about a dozen closely related species [@coughlan2021; @wu2008], two interfertile species, *M. guttatus* and *M. laciniatus*, exhibit strong differences in leaf morphology controlled by overlapping genetic regions, suggesting that large-effect loci underlie this trait [@ferris2015]. Additionally, the contrasting habitats of *M. guttatus*, moist seeps, and *M. laciniatus*, granite, outcrops throughout the Sierra Nevada mountain range in California provide an opportunity to explore the role of leaf shape and host genetics in conforming FEF communities [@tataru2023]. McIntosh et al., [-@mcintosh2024] found that coastal perennial and montane annual *M. guttatus* harbored distinct soil fungal communities, despite the absences of host local adaptation to underground conditions. This suggests that species divergence in life history and associated traits can shape responsiveness to symbionts [@mcintosh2024]. To our knowledge, no studies have considered FEF symbionts in leaf tissue of *Mimulus* spp. and host genetics and leaf shape influence FEF community composition.

In this study, we asked: 1) How do sympatric populations of *M. guttatus* and *M. laciniatus* differ in diversity of FEF communities when grown in common gardens? 2) Does leaf morphology drive FEF colonization in *M. guttatus* and *M. laciniatus*? EXPLAIN COMMON GARDENS To answer these questions we conducted a reciprocal transplant experiment in Yosemite National Park, CA, USA. We used locally adapted genotypes of *Mimulus guttatus* (syn. *Erythranthe guttata* (Fisch. ex DC.) G.L. Nesom) and *Mimulus laciniatus* (syn. *Erythranthe laciniata* (Fisch. ex DC.) G.L. Nesom) as parental lines and their F~2~ hybrids to understand the contributions of host plant genetics and phenotype, and the environment to FEF community composition. Crossing parental lines and generating F~2~ hybrids allowed us to decouple leaf shape from host genetics and understand the relative importance of each component in shaping FEF communities. 

PREDICTIONS 
 Locally adapted genotypes will have more FEF COMMUNITY COMPOSITION than non-locals 
 Laciniatus might recruit more endophytes due to local adaptation.
 Granite will have less abundance/diversity


# Results
How many individuals do we have LBI data, how many do we have genetic data (fungi and ddRAD)? 
(*n* = `r sum(!is.na(plant_traits$logLBI))`) and `r sum(!is.na(ps_clean_3@sam_data[["logLBI"]]))`




# Materials and Methods

### Field experiment design 

The reciprocal transplant was conducted in Yosemite National Park, CA, USA from May to July 2021. It involved arranging 24 individuals into 25 randomized blocks in an 8 x 15 cm formation with a separation of 2.5 cm. Our study closely replicated experiments carried out in the years 2013 and 2019 by Ferris and Willis (-@ferris2018) as well as Tataru and Ferris (-@tataru2023). The experiment utilized four different study sites: two meadows where native *M. guttatus* grows near a standing seep (Little Meadow "Meadow 1" [37.767781, -119.772720; elevation: 2013 m a.s.l.], Crane Flat "Meadow 2" [37.755968, -119.803031; elevation: 1879 m a.s.l.) and two granite outcrops hosting native *M.laciniatus* (Olmstead Point "Granite 1" [37.810700, -119485200; elevation: 2572 m a.s.l.), Yosemite Creek "Granite 2" [37843702, -119573120; elevation: 2424 m a.s.l.]).

The reciprocal transplants used generations of hybrids created from inbred *M. guttatus* (YVO 18; 37.723366, -119.746433; elevation: 1645 m a.s.l.) and *M. laciniatus* lines (WLF 47; 37.841533, -119.59385; elevation: 2436 m a.s.l.). Parental lines were locally adapted to moist seep/meadow and granite outcrops, respectively, not the experimental sites. Hybrids were created by crossing the parental inbred lines to generate F1 hybrids, which were then self-fertilized to generate F2 seeds used in this study. Plant breeding was conducted in the greenhouse at Tulane University (New Orleans, LA, USA). We incorporated both reciprocal hybrid crosses: F2 WLF 47 maternal x YVO 18 paternal (“F2 WxY”) and F2 YVO 18 maternal x WLF 47 paternal (“F2 YxW”). Each block was composed of 6 of each reciprocal F2 hybrid and 6 of each parent, totaling 150 of each genotype per habitat (i.e. meadow and granite) and 2,400 overall experimental plants.

### Seed preparation and germination

We cold-stratified parental *M. laciniatus* and hybrid seeds at 4°C for 10 days and parental *M. guttatus* seeds at 4°C for 5 days to break dormancy and synchronize germination in soil (Sunshine Mix #4 Professional Growing Mix, Sun Gro). Then, we germinated seeds for one week in a greenhouse. Cold-stratification and germination was carried out at the University of California (UC) Davis. Following germination, cotyledons were carefully placed into the randomized block designs using forceps and placed wooden toothpicks to track individuals.
We attributed mortality within the first week to transplant shock and dead germinates were replaced. 

## Leaf shape measurement

For each plant, we obtained measurements leaf lobe index (LBI) as our measure of leaf shape [@ferris2015]. We destructively sampled individuals from experimental block by uprooting and placing samples in Ziploc bags and preserving in ice chest until ready to process (~ 2-3 hrs). We ensured samples did not came into direct contact with ice by placing a barrier (e.g., towel) to avoid tissue damage. We prepared and preserved samples at the UC Merced Yosemite Field Station. Fist, we cleaned plants with tap water to remove all soil and debris remnants from the leaves and roots. We removed all healthy leaves (\~ 5 - 7) from the stems. We used a transparency film to hold the most notably lobed leaf in place and flatten, after which we took a digital photograph for further analysis. To calculate the LBI, we followed Ferris et al., [-@ferris2015]. Briefly, leaf lobing is calculated as the convex hull area minus the true leaf area divided by convex hull area of a digital photograph of a leaf in ImageJ [v1.52r; @schneider2012]. 

<!-- We measured ACI content with ACM-200plus (Opti-Sciences Inc. Hudson, New Hampshire, U.S.A.) on haphazardly selected locations of the leaf surface (working from the petiole out to the leaf tip) [@tellezTraits2022]. The ACM-200 calculates an ACI value from the ratio of % transmittance at 931 nm/% transmittance at 525 nm [@opti-sciencesinc], effectively accounting for leaf thickness. We measured LT (μm) with a Mitutoyo 7327 Micrometer Gauge (Mitutoyo, Takatsu-ku, Kawasaki, Japan) on haphazardly selected locations of the leaf lamina, taking care to avoid major and secondary veins. We used an Imada DST-11a digital force gauge (Imada Inc., Northbrook, IL, United States) to measure LPS, a measure of leaf toughness, on the lamina of each leaf selected, avoiding minor leaf veins when possible [@tellezTraits2022]. It functions by conducting punch-and-die tests with a sharp-edged cylindrical steel punch (2.0 mm diameter) and a steel die with a sharp-edged aperture of small clearance (0.05 mm). Once LPS was measured, we used a 4 mm diameter punch hole to puncture disks for LMA measurements. We collected one disk per leaf (see Supplementary material for details). The disk punches dried were shipped to Tulane University, New Orleans, LA, USA to dry at 60 ℃ for 48-72 hours before being weighed. -->

## Molecular Work

### Tissue preservation

After collecting the leaf shape measurements. We preserved the whole leaf lamina from plants due to their small size, in contrast to Arnold et al., [-@arnold2003] and Tellez et al., [-@tellezTraits2022]. Leaf lamina were sterilized with sequential washes in 95% EtOH (10 s), 0.5% sodium hypochlorite (NaOCl) (60 s), and 70% EtOH (60 s) and air dried under sterile conditions. The maximum amount of leaf lamina was preserved in sterile 2 mL tubes with \~ 1 mL CTAB solution (1 M Tris–HCl pH 8, 5 M NaCl, 0.5 M EDTA, and 20 g CTAB). The leaf tissue in CTAB solution was used for amplicon sequencing (described in detail below). All leaf tissue handling was performed in a sterile environment with an alcohol burner lamp inside a portable biosafety cabinet. All surfaces were previously sterilized sequentially with 0.5% NaOCl, 95% EtOH, and 70% EtOH. We surface sterilized surfaces and instruments in between sample handling to prevent cross contamination.

### Amplicon sequencing

We stored leaf tissue in CTAB solution for 12 months at 20°C before extracting DNA at Tulane University. We followed the DNA extraction protocol and quality control assays described in Chapter 2. Libraries were sequenced on the Illumina NextSeq 1000 platform with the P1 reagent kit (2 × 150 bp) at Duke Genome Sequencing and Analysis Core Facility (Durham, NC, USA).
<!-- To prepare for sample DNA extraction procedure, we decontaminated all instruments, materials, and surfaces in biosafety cabinet with 0.5 % NaOCl, 70 % EtOH, and 95% EtOH, and subsequently treated with UV light for 30 minutes. We subsampled 0.2 - 0.3 g of leaf tissue from each sample and placed into a sterile 2 mL tubes containing an assortment of beads: 3.2 mm stainless steel beads (Next Advance, Cat# SSB32), 100 µL stainless steel bead blend, 0.9-2.0mm (NextAdvance, Cat# SSB14B) and 2-3 of the autoclaved 2 mm zirconium oxide beads (Next Advance, Cat# ZRoB20). The 2 mL tubes with beads were previously prepared. We then proceeded to lyophilize samples for 72 hours to fully remove CTAB content from tissue. After, we submerged the sample tubes in liquid nitrogen for 30 s and homogenized samples at 30 Hz for 3 minutes in a TissueLyser LT (QIAGEN, Valencia, CA, USA). We stored samples in 20 ℃ until DNA extraction procedure. -->

<!-- We used a DNA extraction protocol for high-molecular weight DNA extraction adapted from Russo et al., [-@russo2022]. Briefly, it is a CTAB:chloroform:isoamyl extraction combined with a solid-phase reversible immobilization (SPRI) bead step [@russo2022; @rohland2012; @liu2023]. Protocol modifications allowed us to optimize extractions for fungal DNA from preserved leaf tissue [see details in @aponterolon2023]. After all genomic DNA was extracted, we quantified the DNA using Quant-iT® dsDNA HS Assay kit with Qubit Flourometer (Thermo Fisher Scientific, Waltham, MA, USA., Cat# Q33120) and followed a two-step amplification approach described by Sarmiento et al. [-@sarmiento2017] and U'Ren & Arnold [-@uren2017]. We used standard primers ITS1F [@gardes1993] and ITS2 [@inbook] modified with the Illumina TruSeq adaptor (see Supplementary Material). Every sample was amplified in three parallel reactions at the annealing temperatures 52 ℃, 54 ℃, and 56 ℃ to amplify a wide range of fungal taxa and reduce amplification bias for short ITS sequences [@uren2017; @lumibao2018]. Each PCR (PCR1) reaction contained 2 µL of sample DNA template. We visualized PCR1 reactions with SYBR™ Safe DNA Gel Stain (Thermo Fisher Scientific, Waltham, MA, USA., Cat# S33102) on 2% agarose gel [@oita2021]. We combined 5 µL of amplicon product from parallel reactions into a single tube per sample and purified using Sera-Mag™ SpeedBead Carboxylate-Modified Magnetic Particles (Hydrophobic) (Thermo Fisher Scientific, Waltham, MA, USA., Cat#09-981-123) prepared as per [-@rohland2012 and -@liu2023] and used a ratio of 1.2x:1 with 80% EtOH following manufacturer's instructions. We used 3 µL of PCR1 product from samples, DNA extraction controls, and PCR1 negative controls for a second PCR (PCR2) with barcoded adapters (IDT, Coralville, Iowa, USA). Each PCR2 reaction (total 30 µL) contained 1X Phusion Flash High Fidelity PCR Master Mix (Thermo Fisher Scientific, Waltham, MA, USA., Cat# F548L), 0.075 µM of barcoded primers (forward and reverse pooled at an initial concentration of 2 µM) and 0.20mg/mL of BSA (Thermo Fisher Scientific, Waltham, MA, USA., Cat# B14) following [-@sarmiento2017 and -@uren2017]. Before final pooling for sequencing, we purified and concentrated amplicons using SPRI beads to a total volume of 20 µL. We quantified PCR2 product with Quant-iT™ PicoGreen™ dsDNA Assay Kit (Thermo Fisher Scientific, Waltham, MA, USA., Cat# P7589) with the BioTek Synergy LX plate reader (Agilent, Santa Clara, CA) and combined equimolar amounts of libraries, including DNA extraction controls, PCR1, and PCR2 negative controls into a 10nM library pool. We did not detect any contamination visually or fluorometrically. Libraries were sequenced on the Illumina MiSeq platform with Reagent Kit v3 (2 \u00D7 300 bp) at Duke Genome Sequencing and Analysis Core Facility (Durham, NC, USA). Throughout all these steps, we used a separate set of sterile pipettes, tips, and equipment to reduce contamination in a designated PCR area to restrict contact with pre-PCR materials [@oita2021]. -->

### Sequence-based genotyping

We genotyped individuals following a modified ddRADseq protocol, Rapture [@ali2016; @nelson2019], for the identification of single nucleotide polymorphisms (SNPs). We allotted the remaining DNA extracted from leaf tissue to the ddRADseq library preparation. The Rapture protocol call for a two step digestion process, for which we used the restriction enzyme *Bfal-HF* (R0568S, New England Biolabs, Ipswich, MA, USA) in the first DNA digestion, and  *PstI* (R0140L, New England Biolabs, Ipswich, MA, USA) in the second digestion. We then ligated annealed oligos to each sample. We prepared ddRAD libraries using the NEBNext® Ultra™ II DNA Library Prep Kit for Illumina® (E7645S, New England Biolabs, Ipswich, MA, USA) with the *i7* oligos from NEBNext® Multiplex Oligos for Illumina® (E7335S, New England Biolabs, Ipswich, MA, USA) and a custom *i5* barcoded oligos (IDT, Coralville, Iowa, USA; see Supplementary Materials). We sequenced the library on the Illumina NovaSeq X Plus platform at Duke Genome Sequencing and Analysis Core Facility (Durham, NC, USA). 


### Bioinformatic analyses

#### ITS amplicons
Similar to Chapter 2, we used FastQc v0.12.1 [ v0.12.1; @andrews2010] and MultiQC [@ewels2016] tools to assess the quality of the reads. A total of 20,685,544 total ITS1 reads yielded from 318 (including 31 controls) libraries sequenced in a single run. We modified the open-source DADA2 bioinformatic pipeline for our data set [@callahan2016]. Our initial quality assessment revealed both, forward and reverse reads,were of high quality. We filtered our reads for ambiguous calls before removing the adapters by using `filterAndTrim` function and argument `maxN = 0` from the `dada2` package [v1.28.0; @callahan2016]. We removed forward and reverse primer adapters (and their reverse compliments) and eliminated reads shorter than 10 bp using the `cutadapt` tool [v4.6, @martin2011]. Following this filtering process, we re-evaluated read quality and then applied stringent filter and truncation parameters based on maximum expected errors (maxEE) rather than read length [@edgar2015] to ensure  high-quality taxonomy assignment later on. For this we set set the arguments `trunQ = 2`, `maxEE = c(2,2)` for forward and reverse reads, and minimum read length of 50 bp with `minLen = 50` in the used the `filterAndTrim` function [@callahan2016]. After this filter, we dereplicated reads with the `derepFastq` function and merged pairs using `mergePairs` functions with an overlap of 12 bp, minimum. We then inferred composition of the samples with `dada` function, which applies the DADA algorithm [@callahan2016; @rosen2012]. We removed chimeras via the "consensus"method with the `removeBimeraDenovo` function and ultimately we used the `assignTaxonomy` function to assign taxonomy the amplicon sequence variants (ASV) referenced against the UNITE database [@abarenkov2023a]. After taxonomy assignment we used the `phyloseq` package [@mcmurdie2013] to create a phyloseq object for downstream analyses.

We decontaminated ITS amplicons and performed all post-quality bioinformatic steps as described in Chapter 2.
<!-- We used the `decontam` package [v1.20.0; @davis2018] to statistically determine which ASVs are likely contaminants based on their frequency in our samples and remove them using `prune_taxa` function from the `phyloseq` package [v1.44.0; @mcmurdie2013]. After which, we calculated the average read count found in DNA and PCR extraction controls, considered to be laboratory contaminants, and subtracted that from the samples' read counts. We then used custom scripts to remove any ASV that represented less than 0.1% of the abundance per sample on the assumption that it originates from contamination throughout handling of samples in the DNA and PCR processes. We removed singleton ASVs with the `prune_taxa` function [@mcmurdie2013]. All post-quality bioinformatic steps were performed in *R* [v.4.3.3; @rcoreteam2024]. -->

#### Single Nucleotide Polymorphisms (SNPs)

The *i7* demultiplexing was performed by Duke Genome Sequencing and Analysis Core Facility (Durham, NC, USA). The *i5* demultiplexing and generation of *vcf* files was done following the Nelson [-@nelson2020]. NEEDS MORE



## Statistical Analyses

### Community Diversity

We standardized the libraries using repeated rarefaction, as described by Cameron et al., [-@cameron2021]. Following an assessment of Good's coverage and a qualitative evaluation of the libraries, we established a sequence depth of 1300 reads to ensure balanced coverage and sample breadth. This approach facilitated a proportional representation of observed sequences from host species and provided a robust characterization of random variation inherent in the rarefaction process [@cameron2021; @schloss2024]. Subsequently, we generated 50 rarefied abundance matrices without replacement utilizing the `mirl` function from the `mirlyn` package.
Next, we computed alpha diversity per sample as Hill orders -observed richness (q = 0), exponentiated Shannon's entropy (q = 1), and Inverse Simpson's Diversity (q =2)— using our modified version of the `alphadivDF` function based on work by Cameron et al., [-@cameron2021; see custom script in Supplementary material] that wraps common diversity indices in `vegan` package utility functions [@oksanen2022]. .

For beta diversity analyses, we performed a Hellinger transformation on the rarefied abundance matrices and calculated a Bray-Curtis dissimilarity matrix for each, then we applied a distance-based Redundancy Analysis (dbRDA) on dissimilarities to statistically compare similarities within each host species per site [@anderson2017; @legendre1999; @mcardle2001].

Our dbRDA model consisted of terms logLBI, site, and genotype. The leaf shape data was not randomized or subsampled to match rarefied dataset, the original values applied to all 50 rarefied matrices. To select the best model, we evaluated the marginal significance of constraining variables after 999 permutations with function `anova.cca` [@legendre2011; @legendre2012; @oksanen2022]. We evaluated the homogeneous dispersion of variances with a permutational analysis of multivariate dispersion (PERMDISP) using the `betadisper` with parameter `type = "median"`, and `permutest` functions from `vegan`, the latter with 999 permutations [@oksanen2022]. We used a post-hoc Tukey's test to compare the differences in the dispersion of the FEF communities among sites and elevation categories.
<!-- We used the `simper` function from `vegan` to discriminate which species contribute the most to compositional differences between groups [@oksanen2022]. -->
To determine if there is a core FEF community associated with host species or elevation categories, we conducted an indicators species analyses (ISA) using the `multipatt` function from the `indicspecies` package [@decaceres2009].

<!-- To assess correlations between pairwise FEF community dissimilarity and the geographical distance matrix per host species (Q4), we computed a Mantel tests with Spearman's rho and 999 permutations using the `mantel` function [@oksanen2022]. -->
<!-- For this test, we opted for a less taxing computational approach and rarefied sequences with the same parameters as before and calculated Hellinger transformations with the `avgdist` function [@oksanen2022]. -->
<!-- We then calculated the Bray-Curtis dissimilarity with `vegdist` [@oksanen2022]. -->
<!-- For the geographical distances between sites, we used `distm` function with the Vicenty (ellipsoid) method from the `geosphere` package [@hijmans2022]. -->

### Leaf shape

We checked for normality and homoscedasticity of the LBI measurements.
We used Shapiro-Wilk and Fligner-Killen tests from the `stats` package [@rcoreteam2024] to check for normality and homoscedasticity, respectively. We established that the leaf lobe index data was not normally distributed and not homoscedastic and perfomed log-transformation. We then used non-parametric tests, the Wilcoxon Rank Sum test, to compare LBI means among genotypes. We used the `compare_means` and `stat_compare_means`functions from the `ggpubr` package [@kassambara2023] to perform these tests and properly visualize them. We adjusted *p* values to account for false discovery rates in multiple comparisons by using “BH” method [@benjamini1995].

All statistical analyses were performed in *R* programming language [v.4.3.3; @rcoreteam2024].
We present the log-transformed LBI (*n* = `r sum(!is.na(plant_traits$logLBI))`).
The FEF community data is presented at the plant/sample level (*n* = `r sum(!is.na(plant_traits$Observed))`).

# Results

Our sequencing effort yielded 20,157,032 reads representing 532 ASVs from 287 samples after processing samples through the DADA2 pipeline. The raw reads obtained were composed of 69.1% Ascomycota, 31% Basidiomycota, 0.05% Chytridiomycota, 0.01% Mortierellomycota, \<0.01% Glomeromycota, \<0.01% Rozellomycota, \<0.001% Aphelidiomycota, and 0.23% missed hits. Following decontamination and removal of singletons we obtained 4,856,220 reads representing 231 ASVs from 157 samples composed of 69.1% Ascomycota, 31% Basidiomycota, 0.05% Chytridiomycota, 0.01% Mortierellomycota, 0.001% Glomeromycota, \<0.001% Rozellomycota, and 0.22% missed hits (Fig. 1 and Fig. S2). The presence of Ascomycota (100%) and Basidiomycota (99%) was consistent in samples across all sites and host species in the un-rarefied data (Fig. 1 and Fig. S2). We identified eighteen core taxa members in the un-rarefied data (Table 1) The following section reports on results from the rarefied data sets.

We observed significant differences in the FEF alpha diversity of genotypes in the rarefied data, *M. laciniatus* and *M. nasutus* in Hill order 1 (𝑞 = 1, *p* \> .05, Fig. ????).
We observed a similar pattern in beta diversity between sites (Fig. ???).
We saw no differences in beta diversity between low and mid elevation sites for Hill order 2 (𝑞 = 2, *p* \> 0.05, Fig. 3F).

To test for differences in FEF community composition, we used a distance-based Redundancy Analysis (dbRDA) to model the relationship between FEF communities, leaf functional traits and elevation (Q3).
The best fit model revealed that 17% of the overall variance in FEF communities was accounted for by log-transformed LBI, host species, and elevation, the constraining variables. We saw that the first axis (dbRDA1) explained 65.8% and the second axis (dbRDA2) explained 15.3% of the constrained variance (Fig. 4). We observed a distinct, yet overlapping, grouping of FEF communities by species (Fig. 4A), as well as when visualized by elevation category (Fig. 4B). 


To corroborate our findings, we used a permutational analysis of multivariate dispersion (PERMDISP) to test for homogeneity of variances in FEF communities.
We found that FEF communities were homogeneous across all species (*F*~2,4197~= 320.3, *p* \< .001).
The post-hoc Tukey's test revealed that all species comparison differences were statistically significant at ⍺ = 0.05.
We detected significant differences in the dispersion of FEF communities by elevation category (*F*~2,4197~= 228.1, *p* \< .001).
The post-hoc Tukey's test showed that all elevation categories had significant differences in the dispersion of FEF communities at ⍺ = 0.05.
Finally, we tested for FEF community dissimilarity by geographical distance and found a statistically significant positive correlation when we observed all host species (*r* = .07, *p* \< .05, Fig. 5A).
At the host species level, we saw a significant correlation between FEF community and geographical distance for *M. laciniatus* (*r* = 0.27, *p* = .01, Fig. 5A) and *M. nasutus* (*r* = .29, *p* \< .01, Fig. 5B) .
For *M. guttatus* we saw a negative correlation between FEF communities and geographic distance (*r* = -.004, *p* = .48, Fig. 5B).


We found that leaf functional traits differed among and within *Mimulus* species across elevation (Fig. S3 - S7).
For LMA, when we observed all host species, we saw a statistically significant positive correlation between LMA and elevation (R^2^-adjusted = .041, *p* \< .001, Fig. S3A).
When we observed this relationship with categorical elevation, we found that species do not differ in LMA values at low elevations (Fig. S3B).
At mid elevations, *M. laciniatus* and *M. guttatus* have statistically significant differences in LMA (*p* \< .001), while at high elevation this difference dissipates.
At high elevation we saw that *M. nasutus* differs significantly from both *M. laciniatus* and *M. guttatus* (*p* \< .0001, Fig. S3B).
For ACI, when we observed all species, we found no correlation with elevation (R^2^-adjusted \< -.000, *p* \< .0001, Fig. S4A).
But when we observed the elevation categories we saw that *M. laciniatus* had statistically significant differences (*p* \< .0001) from *M. nasutus* and *M. guttatus*, while the latter two did not differ (Fig. S4B).
At mid elevation we saw that *M. laciniatus* and *M. guttatus* had statistically significant differences (*p* \< .0001), while at high elevations *M. laciniatus* had significantly lower levels (*p* \< .0001) of ACI than *M. nasutus*, and *M. guttatus* (*p* \< .01, Fig. S4B).
We also saw statistically significant differences between *M. nasutus* and *M. guttatus* at high elevations (*p* \< .0001)(Fig. S4B).
The LBI trait is a measure of leaf "lobeness" and it is confounded with species, since not all host species exhibit the trait plasticity with elevation change.
Regardless, our comparisons show that LBI is significantly correlated with elevation (Fig. S5A).
Our categorical comparison shows that *M. laciniatus* had statistically significant greater values of LBI compared to *M. nasutus* and *M. guttatus* at all elevation categories (Fig. S5B).
At low elevations, *M. nasutus* and *M. guttatus* did not differ, but they did have significant differences at high elevations (p \< .0001, Fig. S5B).
Our measure of leaf toughness, LPS, was significantly positively correlated with elevation (R^2^-adjusted = .004, *p* = .032, Fig. S6A).
At low elevations we saw a statistically significant difference in LPS between *M. nasutus* and *M. guttatus* (*p* \< .01), while at mid elevations *M. laciniatus* and *M. guttatus* showed a similar pattern (*p* \< .0001, Fig. S6B).
At high elevations we only saw significant differences between *M. laciniatus* and *M. nasutus* (*p* \< .01, Fig. S6B).
Finally, we saw a significant positive correlation between LT and elevation (R^2^-adjusted = .013, *p* \< .0001), when we observe all species together (Fig. S7A).
We only see statistically significant differences between *M. laciniatus* and *M. nasutus* at low elevations(*p* \< .05), while at mid we see significant differences between *M. laciniatus* and *M. guttatus* (*p* \< .0001) and at high elevations as well (*p* \< .0001, Fig. S7B).
At high elevations, *M. guttatus* and *M. nasutus* also show significant differences (*p* \< .0001, Fig. S7B).

# Discussion



# Conclusions

The *Mimulus guttatus* species complex serves as a robust ecological and evolutionary model system.
The identification of FEF communities in *Mimulus* spp.
leaf tissue represents a substantial contribution to this field of study, opening up new avenues or inquiry.
Our study uncovers potential beneficial FEFs that may contribute to the species complex's adaptation to cold environments.
Future research should focus on exploring the interactions of FEF communities and *Mimulus* host genotypes that contribute to the expanded phenotype.
As well as, understanding how highly prevalent FEF taxa respond to seasonal and temporal changes and contribute to overall plant fitness.
An experimental approach taking into consideration populations' phenotype and genotypes can help disentangle the effect of site and host species on FEF communities.
To optimize microbial studies in *Mimulus*, it crucial to explore alternative sampling methods such as using fresh tissue or rapidly preserved tissue in liquid nitrogen, which is known to yield the best results.
We also acknowledge our limited scope and urge future investigations to expand their sampling efforts per species and populations while prioritizing prompt DNA extraction to enhance FEF capture.

# Author Contributions

# Acknowledgements

# Conflict of Interest Statement

The authors declare no competing interests.

# Data Availability Statement

# References

::: {#refs}
:::

# Figures

```{r, themes}
#| echo: false
#| eval: true
#| tidy: true

#ggplot themes
# Theme for leaf trait and diversity plots: discrete
theme_lfspp_discrete <-      theme_classic(base_size = 16) +
  theme(legend.title = element_text(face = "bold"),
        strip.text = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        #legend.text = element_text(face = "italic"), #Make legend text italic
        plot.caption = element_markdown(size = 12),
        axis.text.x = element_blank())

# Theme for leaf trait plots: continuous
theme_lfspp_continuous <- theme_classic(base_size = 16) +
  theme(legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        legend.text = element_text(face = "italic"), #Make legend text italic
        axis.text.x = element_text(size = 14),
        legend.position = "bottom")

# Theme for species by diversity  plots: discrete
theme_sppdiv_discrete <-    theme_classic(base_size = 16) +
   theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "italic", size = 14),
         panel.border = element_rect(linetype = "blank", fill = NA),
         #legend.text = element_text(face = "italic", size = 12), #Make legend text italic
         axis.text.x.bottom = element_blank(),
         axis.title.x = element_blank())

theme_div_discrete <-    theme_classic(base_size = 16) +
   theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "italic", size = 14),
         panel.border = element_rect(linetype = "blank", fill = NA),
         axis.text.x.bottom = element_blank(),
         axis.title.x = element_blank())

# Theme for leaf trait and diversity  plots: continuous
theme_lfdiv_continuous <- theme_classic(base_size = 16) +
   theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "bold.italic", size = 14),
         panel.border = element_rect(linetype = "blank", fill = NA),
        legend.text = element_text(face = "italic"), #Make legend text italic
         axis.text.x = element_text(size = 14))
```

## Figure 1

<!-- Seems weird to have so much Basidiomycota - how many taxa does this represent? -->

```{r, figure3}
#| echo: false
#| eval: true
#| tidy: true
#| message: false
#| fig-width: 6
#| fig-height: 8
#| label: rabun_barplot
#| fig-cap: "Relative abundance of fungal phyla in raw (A) and rarefied (B) data, by species and elevation category."


#Barplots with microeco
# Quick addition traits log transformed
names_list <- colnames(ps_clean_3@otu_table) #List of samples
ps_clean_3@sam_data <- plant_traits |>
  filter(Unique_ID %in% names_list) |>
  select(c(1:12, 15:20)) |>
  mutate(X = Unique_ID) |>
  column_to_rownames(var = "X") |>
  sample_data()


# Raw data
micro_psclean <- phyloseq2meco(ps_clean_3) # First convert phyloseq to meco


t1 <- trans_abund$new(dataset = micro_psclean, taxrank = "Phylum", ntaxa = 8)
t1gg <- t1$plot_bar(others_color = "grey70", facet = c("Species", "Elevation_cat"), xtext_keep = FALSE, legend_text_italic = FALSE, barwidth = 1, color_values = RColorBrewer::brewer.pal(8, "Set3"))
t1gg <- t1gg +   labs(title = "Raw reads") +
  theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "italic", size = 10),
         panel.border = element_rect(linetype = "blank", fill = NA),
         axis.text.x = element_blank())
#t1gg


# Rarefied data
micro_rarefied_ps <- phyloseq2meco(rarefied_phyloseq) # First convert phyloseq to meco

r1 <- trans_abund$new(dataset = micro_rarefied_ps, taxrank = "Phylum", ntaxa = 8)
r1gg <- r1$plot_bar(others_color = "grey70", facet = c("Species", "Elevation_cat"), xtext_keep = FALSE, legend_text_italic = FALSE, barwidth = 1, color_values = RColorBrewer::brewer.pal(8, "Set3"))
r1gg <- r1gg +
  labs(title = "Rarefied reads") +
  theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "bold.italic", size = 10),
         panel.border = element_rect(linetype = "blank", fill = NA),
         axis.text.x = element_blank()) 
#r1gg

# Arrange plots
ra_plots <- ggarrange(t1gg, r1gg,
                          nrow = 2, ncol = 1,
                          common.legend = TRUE, legend = "bottom",
                          labels = c("A", "B"))
ra_plots

ggsave(file.path(path, "figures/figure1.png") , plot = ra_plots, dpi=300, units=c("mm"), width=200, height=250)
```

## Figure 2

```{r, figure2}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 6
#| label: lbi_elev_scatter
#| fig-cap: "Change in log-transformed leaf lobe index (LBI) by genotype and habitat. A) Compares logLBI means by species and habitat category. The black line across violins represents the mean value. B) Change in logLPS per species as elevation increases. The black trend line represents the fitted model for all data points, see main text for R squared and *p* values. Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."

#ggpubr package used for comparisons tests
lbi_compare_means <- compare_means(LBI ~ Genotype,
         data = plant_traits,
         group.by = "Site",
         method = "wilcox.test",
         p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)

#lbi_compare_means


#Roughly the same outcome as pairwise_t_test.

#Report with `compare_means` because it is easier to plot with `ggpubr` package.
errbar_lims <- group_by(leaf_traits, Genotype) |> 
              summarize(mean = mean(logLBI), se = sd(logLBI)/sqrt(n()), 
                        upper = mean + (2*se), lower = mean - (2*se))

# Comparisons and labels
my_comparisons <- list(c("F2WY", "L"), c("F2WY", "G"), c("F2YW", "L"), c("F2YW", "G"), c("G", "L"), c("F2YW", "F2WY"))
my_comparisons2 <- list(c("CF", "LM"), c("CF", "OPN"), c("LM", "OPN"))
labels_habitat <- c("Meadow 1", "Meadow 2", "Granite 1")
names(labels_habitat) <- c("CF", "LM", "OPN")

lbi <- ggplot(plant_traits, aes(y = logLBI, x = Genotype)) +
  geom_point(
    aes(color = Genotype),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Genotype), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_fill_manual(values = met.brewer(
    "Johnson",
    n = 4,
    type = "discrete",
    direction = 1
  )) +
  theme_lfspp_discrete +
  labs(y = "log10[LBI (convex_hull - true_area]/convex_hull)]", x = "", caption = "*n* = 793") +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     #label.y = c(0.4, 0.6, 1),
                     label = "p.signif") +
  #facet_wrap(~Site, labeller = labeller(Site = labels_habitat))  
  facet_wrap(~factor(Site, levels =  c('LM', 'CF', 'OPN'))) 

lbi
ggsave(filename = file.path(path, "figures/figure2.png"), plot = lbi, dpi=300, units=c("mm"), width=300, height=150)
```



## Figure 3

```{r, figure3}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig-width: 6
#| fig-height: 6
#| label: boxplot_hill_orders
#| fig-cap: "Alpha and beta diversity means comparisons in host species and habitat types. Alpha diversity means comparisons; A) Observed ASV richness (𝑞 = 0); B) Shannon's entropy (𝑞 = 1); and C) Inverse Simpson's index (𝑞 = 2) per host species. A-C) Red filled boxplots correspond to F2YW, orange filled to G (*M. guttatus*), yellow to L (*M. laciniatus*), and teal to F2WY genotype. Beta diversity mean comparions; A) Observed ASV richness (𝑞 = 0); B) Shannon's entropy (𝑞 = 1); and C) Inverse Simpson's index (𝑞 = 2)per elevation category. D-F) Light teal filled boxplot corresponds to Meadow 1, purple to Meadow 2, and light maroon to Granite 1. Open shapes represent: squares (F2YW), circles (G), triangles (L), and crosses (F2WY).  Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."

############################################
#### Alpha diversity ####
#### At the species level ####
############################################

########## Labels ###########
#Legend title label
legend_title <- "Species"
# Species labels
labels_list <- c("M. laciniatus", "M. nasutus", "M. guttatus")
names(labels_list) <- c("L", "N", "G")
#############################

# Plot
hill0_species <- ggplot(data = plant_traits_rfy,
                        aes(x = Genotype, y = Observed)) +
  geom_point(
    aes(color = Genotype),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Genotype), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_fill_manual(values = met.brewer(
    "Johnson",
    n = 4,
    type = "discrete",
    direction = 1
  )) +
  #scale_color_manual(aes(color = "black")) +
  theme_sppdiv_discrete +
  labs(y =  "\U1D492 = 0", x = "", col = "") +
  guides(color = guide_legend(title = "Genotype")) +
  #facet_grid(~Site) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     label = "p.signif")

#hill0_species


# Hill number 1
# Shannon diversity or hill number 1
# Plot
hill1_species <- ggplot(data = plant_traits_rfy,
                        aes(x = Genotype, y = hill_1)) +
  geom_point(
    aes(color = Genotype),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Genotype), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_fill_manual(values = met.brewer(
    "Johnson",
    n = 4,
    type = "discrete",
    direction = 1
  )) +
  #scale_color_manual(aes(color = "black")) +
  theme_sppdiv_discrete +
  labs(y =  "\U1D492 = 1", x = "", col = "") +
  guides(color = guide_legend(title = "Genotype")) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     label = "p.signif")
  
#hill1_species


# Hill number 2
# Inverse Simpson diversity or hill number 2
hill2_species <- ggplot(data = plant_traits_rfy,
                        aes(x = Genotype, y = hill_2)) +
  geom_point(
    aes(color = Genotype),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Genotype), alpha = 0.5, outlier.alpha = 0.0) +
  # geom_crossbar(stat="summary",
  #               fun = median,
  #               fun.max = median,
  #               fun.min = median,
  #               fatten = 2,
  #               width = 0.8,
  #               color="black") +
  scale_color_manual(values = met.brewer(
      "Johnson",
      n = 4,
      type = "discrete",
      direction = 1
    )
  ) +
  scale_fill_manual(values = met.brewer(
    "Johnson",
    n = 4,
    type = "discrete",
    direction = 1
  )) +
  #scale_color_manual(aes(color = "black")) +
  theme_sppdiv_discrete +
  labs(y =  "\U1D492 = 2", x = "", col = "") +
  guides(color = guide_legend(title = "Genotype")) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     label = "p.signif")
  
#hill2_species

# Joined plots
hill_numbers_species <- ggarrange(hill0_species, hill1_species, hill2_species, 
                                  nrow = 1, ncol = 3,
                                  common.legend = TRUE,
                                  labels = c("A", "B", "C"),
                                  legend = "bottom")

#hill_numbers_species
#ggsave(filename = file.path(path, "figures/hill_numbers_species.png"), plot = hill_numbers_species, dpi=300, units=c("mm"), width=250, height=275)


#################################
#### Beta diversity ####
#### Across sites ####
#################################

########## Labels ###########
#Legend title label
legend_title <- "Species"
# Species labels
labels_list <- c("M. laciniatus", "M. nasutus", "M. guttatus")
names(labels_list) <- c("L", "N", "G")
#############################

# Observed richness
# Hill number 0
hill0_beta <-
  ggplot(plant_traits_rfy, aes(x = Site, y = Observed)) +
  geom_point(
    aes(shape = Genotype, color = Site),
    alpha = 0.5,
    size = 1.7,
    position = position_jitter(w = 0.2)
  )+
  geom_boxplot(aes(color = Site), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(
    labels = c('Crane Flat', 'Little Meadow', 'Olmstead Point'),
    values = met.brewer(
      "Tsimshian",
      n = 3,
      type = "discrete",
      direction = -1
    )
  ) +
  scale_shape_manual(
    values = c(21:24),
  ) +
  theme_div_discrete +
  scale_x_discrete(labels = c('', '', '', '')) +
  stat_compare_means(comparisons = my_comparisons2,
                     method = "wilcox.test",
                     label = "p.signif") +
  labs(y = "\U1D492 = 0", x = "") +
  guides(fill = guide_legend(title = "Site"),
         shape = guide_legend(title = "Genotype"))

#hill0_beta



# Hill number 1
# Shannon diversity or hill number 1
hill1_beta <- ggplot(plant_traits_rfy, aes(x = Site, y = hill_1)) +
  geom_point(
    aes(shape = Genotype, color = Site),
    alpha = 0.5,
    size = 1.7,
    position = position_jitter(w = 0.2)
  )+
  geom_boxplot(aes(color = Site), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(
    labels = c('Crane Flat', 'Little Meadow', 'Olmstead Point'),
    values = met.brewer(
      "Tsimshian",
      n = 3,
      type = "discrete",
      direction = -1
    )
  ) +
  scale_shape_manual(
    values = c(21:24),
  ) +
  theme_div_discrete +
  scale_x_discrete(labels = c('', '', '', '')) +
  stat_compare_means(comparisons = my_comparisons2,
                     method = "wilcox.test",
                     label = "p.signif") +
  labs(y = "\U1D492 = 1", x = "") +
  guides(fill = guide_legend(title = "Site"),
         shape = guide_legend(title = "Genotype"))

#hill1_beta


# Hill number 2
# Inverse Simpson diversity or hill number 2

hill2_beta <- ggplot(plant_traits_rfy, aes(x = Site, y = hill_2)) +
  geom_point(
    aes(shape = Genotype, color = Site),
    alpha = 0.5,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Site), alpha = 0.5, outlier.alpha = 0.0) +
  # geom_crossbar(stat="summary",
  #               fun = mean,
  #               fun.max = mean,
  #               fun.min = mean,
  #               fatten = 2,
  #               width = 0.5,
  #               color="black") +
  scale_color_manual(
    labels = c('Crane Flat', 'Little Meadow', 'Olmstead Point'),
    values = met.brewer(
      "Tsimshian",
      n = 3,
      type = "discrete",
      direction = -1
    )
  ) +
   scale_fill_manual(
    #labels = c('Crane Flat', 'Little Meadow', 'Olmstead Point'),
    values = met.brewer(
      "Tsimshian",
      n = 4,
      type = "discrete",
      direction = -1
    )
  ) +
  scale_shape_manual(
    values = c(0:3),
  ) +
  theme_div_discrete +
  scale_x_discrete(labels = c('', '', '', '')) +
  stat_compare_means(comparisons = my_comparisons2,
                     method = "wilcox.test",
                     label = "p.signif") +
  labs(y = "\U1D492 = 2", x = "") +
  guides(fill = guide_legend(title = "Site"),
         shape = guide_legend(title = "Genotype", alpha = 1))

#hill2_beta


# Joining plots
hill_beta <- ggarrange(hill0_beta, hill1_beta, hill2_beta,
          nrow = 1, ncol = 3,
          common.legend = TRUE,
          legend = "bottom",
          labels = c("D", "E", "F"))
#hill_beta

#### Alpha and Beta diversity ####
# Joined plots
# A joined plot of joined plots


alpha_beta_diversity <- ggarrange(hill_numbers_species, "", hill_beta,
                          nrow = 3, ncol = 1,
                          common.legend = FALSE,
                          widths = c(1, 0.2, 1),
                          heights = c(1, 0.2, 1),
                          legend = "bottom")

alpha_beta_diversity

ggsave(filename = file.path(path, "figures/figure3.png"), plot = alpha_beta_diversity, dpi=300, units=c("mm"), width=300, height=275)
```

## Figure 4

```{r, figure4}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 7
#| label: dbrda_plot
#| fig-cap: "FEF community composition association with leaf functional traits and elevation per host species. Distance-based Redundancy Analysis (dbRDA) plot of rarefied FEF community and leaf functional traits by species. A) Each cluster of points represents a rarefied FEF community sample from one host species; blue filled squares correspond to *M. laciniatus*, green circles to *M. nasutus*, and yellow triangles to *M. guttatus*. B) Purple filled shapes correspond to LOW elevation, pink chapes to MID elevation and light maroon shapes to HIGH elevation. Point shapes correspond to host species. Solid arrow lines represent significant associations (*p* <0.01), while dashed lines represent non-significant associations. The length and direction of the arrows indicate the strength and direction of the association between the traits and the FEF community composition. The labels on the arrows correspond to the leaf functional traits. Ellipses represent 95% confidence intervals. The plot is based on the Bray-Curtis dissimilarity matrix."

# dbRDA using Elevation as continuous variable
#logACI + logLT + logLPS + logLMA +
load("clean_data/statistics/m2_hell.rda")
final_model <- m2_hell

names(final_model)
B <- summary(final_model)


# Extracting scores for the plot
ordination_scores <- as.data.frame(vegan::scores(final_model)$sites)

# Extracting names for the plot
ordination_names <- rownames(ordination_scores)

# Row names to column
ordination_scores$Unique_ID <- rownames(ordination_scores)

# Subset for the plot
dbrda_df <- plant_traits_rfy 

# Merge scores with trait data
merged_data <- right_join(ordination_scores, dbrda_df, by = c("Unique_ID" = "X"))

# Extracting scores for arrows
arrow_scores <- as.data.frame(vegan::scores(final_model, display = "bp"))

# Define the arrow aesthetic mapping
arrow_map <- aes(xend = (dbRDA1*2), yend = (dbRDA2*2), x = 0, y = 0, shape = NULL, color = NULL, fill = NULL)
label_map <- aes(x = 2*dbRDA1, y = 2*dbRDA2, label = row.names(arrow_scores), shape = NULL, color = NULL, fill = NULL)
arrowhead = arrow(length = unit(0.02, "npc"))

#subset A4 for labeling
arrow_scores <- arrow_scores[order(rownames(arrow_scores)), ]
A4 <- lapply(1:6, function(i) arrow_scores[i, ])

# A4.sub1 <- arrow_scores[1,] #Elevation
# A4.sub2 <- arrow_scores[2,] #ACi
# A4.sub3 <- arrow_scores[3,] #LBI
A4.sub4 <- arrow_scores[4,] #logLBI
# A4.sub5 <- arrow_scores[5,] #LPS
# A4.sub6 <- arrow_scores[6,] #LT.

# dbRDA plot based on species
full_final_model <- ggplot(data = merged_data, aes(x = dbRDA1, y = dbRDA2)) +
  geom_point(data = merged_data, aes(color = Genotype, shape= Site), size = rel(4), alpha = 0.2, stroke = 1) +
  geom_segment(arrow_map, size = rel(.8), data = arrow_scores, color = "black", arrow = arrowhead) +
  geom_vline(xintercept = 0, color = "grey30", linetype = "dashed") + # plot vertical line
  geom_hline(yintercept = 0, color = "grey30", linetype = "dashed") + # plot horizontal line
  geom_text(label_map, size = rel(4), data = A4[[1]], fontface = "bold", show.legend = FALSE, label = c("F2WY"), hjust = 1.2 ) +
  geom_text(label_map, size = rel(4), data = A4[[2]], fontface = "bold", show.legend = FALSE, label = c("G"),  vjust = 1.3 ) +
  geom_text(label_map, size = rel(4), data = A4[[3]], fontface = "bold", show.legend = FALSE, label = c("L"), vjust = -0.6) +
  geom_text(label_map, size = rel(4), data = A4[[4]], fontface = "bold", show.legend = FALSE, label = c("logLBI"), vjust = -0.3,  hjust = 0.1) +
  geom_text(label_map, size = rel(4), data = A4[[5]], fontface = "bold", show.legend = FALSE, label = c("LM"), hjust = -0.2 ) +
  geom_text(label_map, size = rel(4), data = A4[[6]], fontface = "bold", show.legend = FALSE, label = c("OPN"), vjust = -0.3, hjust = 1.2 ) +
  xlab(label = paste("dbRDA1 (", round(B$concont$importance[2,1]*100, digits = 1), "%)", sep="")) +
  ylab(label = paste("dbRDA2 (", round(B$concont$importance[2,2]*100, digits = 1), "%)", sep="")) + 
  scale_color_manual(values= met.brewer("Johnson", n = 4, type = "discrete", direction = 1)) +
  scale_shape_manual(values=c(0:3)) +
  stat_ellipse(aes(color = Genotype),
               geom = "path",
               linewidth = 1.7,
               position = "identity",
               type = "t", linetype = 1,
               level = 0.95,
               segments = 51,
               na.rm = FALSE,
               show.legend = NA, inherit.aes = TRUE) +
  theme_classic(base_size = 16) +
  theme(legend.title = element_text(face = "bold")) +
  guides(shape = guide_legend(ncol=1))

     
# Rearranging the order of layers so arrows are above the points.
full_final_model$layers <- c(full_final_model$layers,full_final_model$layers[[2]], full_final_model$layers[[5]], full_final_model$layers[[6]], full_final_model$layers[[7]], full_final_model$layers[[8]], full_final_model$layers[[9]], full_final_model$layers[[10]])
# full_final_model

#ggsave(filename=file.path(path, "figures/dbRDA_full_model.png"), plot = full_final_model, dpi=600, units=c("mm"), width=150, height=150)

#####################################
# dbRDA using Elevation 
#m3bdrda <- dbrda(asv_vegdist ~ logACI + logLT + logLPS + logLMA + logLBI + Elevation_cat, distance = "bray", data = ordi_traits, na.action = na.omit)

# dbRDA plot based on elevation
full_site_model <-  ggplot(data = merged_data, aes(x = dbRDA1, y = dbRDA2)) +
  geom_point(data = merged_data, aes(color = Site, shape = Genotype), size = rel(4), alpha = 0.2, stroke = 1) +
  geom_segment(arrow_map, size = rel(.8), data = arrow_scores, color = "black", arrow = arrowhead) +
  geom_vline(xintercept = 0, color = "grey30", linetype = "dashed") + # plot vertical line
  geom_hline(yintercept = 0, color = "grey30", linetype = "dashed") + # plot horizontal line
  geom_text(label_map, size = rel(4), data = A4[[1]], fontface = "bold", show.legend = FALSE, label = c("F2WY"), hjust = 1.2 ) +
  geom_text(label_map, size = rel(4), data = A4[[2]], fontface = "bold", show.legend = FALSE, label = c("G"),  vjust = 1.3 ) +
  geom_text(label_map, size = rel(4), data = A4[[3]], fontface = "bold", show.legend = FALSE, label = c("L"), vjust = -0.6) +
  geom_text(label_map, size = rel(4), data = A4[[4]], fontface = "bold", show.legend = FALSE, label = c("logLBI"), vjust = -0.3,  hjust = 0.1 ) +
  geom_text(label_map, size = rel(4), data = A4[[5]], fontface = "bold", show.legend = FALSE, label = c("LM"), hjust = -0.2 ) +
  geom_text(label_map, size = rel(4), data = A4[[6]], fontface = "bold", show.legend = FALSE, label = c("OPN"), vjust = -0.3, hjust = 1.2 ) +
  xlab(label = paste("dbRDA1 (", round(B$concont$importance[2,1]*100, digits = 1), "%)", sep="")) +
  ylab(label = paste("dbRDA2 (", round(B$concont$importance[2,2]*100, digits = 1), "%)", sep="")) + 
  scale_color_manual(values= met.brewer("Tsimshian",
      n = 4,
      type = "discrete",
      direction = -1)) +
  scale_shape_manual(values=c(0:3)) +
  stat_ellipse(aes(color = Site),
               geom = "path",
               linewidth = 1.3,
               position = "identity",
               type = "t", linetype = 1,
               level = 0.95,
               segments = 51,
               na.rm = FALSE,
               show.legend = NA, inherit.aes = TRUE) +
  theme_classic(base_size = 16) +
  theme(legend.title = element_text(face = "bold")) +
  scale_x_continuous(limits = c(-2.4, 3), breaks = c(-2:3)) +
  guides(shape = guide_legend(ncol=1))

     
# Rearranging the order of layers so arrows are above the points.
full_site_model$layers <- c(full_site_model$layers, full_site_model$layers[[2]], full_site_model$layers[[5]], full_site_model$layers[[6]], full_site_model$layers[[7]], full_site_model$layers[[8]], full_site_model$layers[[9]], full_site_model$layers[[10]])
#full_site_model

# Joining plots
double_dbrda <- ggarrange(full_final_model,"", full_site_model, ncol = 1, nrow = 3, 
                          heights = c(1, 0.1, 1),
                          widths = c(1, 0.1, 1),
          labels = c("A", "B"),
          common.legend = F, legend = "right")

double_dbrda
#Save the plot
ggsave(file.path(path, "figures/figure4.png"), plot = double_dbrda, dpi=300, units=c("mm"), width=200, height=250)
```

<!-- ## Figure 5 -->

<!-- ```{r, figure5} -->
<!-- #| echo: false -->
<!-- #| eval: true -->
<!-- #| tidy: true -->
<!-- #| fig-width: 6 -->
<!-- #| fig-height: 7 -->
<!-- #| label: mantel_plot -->
<!-- #| fig-cap: "Dissimilarity of FEF communities associates with *Mimulus* as a function of geographic distance per site. Data represent pairwise Bray-Curtis dissimilarity among sites. A) Fefe community dissimilarity in considering all host species. B) FEf community dissimilarity by host species. Blue filled points correspond to *M. laciniatus*, green filled to *M. nasutus*, and yellow to *M. guttatus*." -->

<!-- # Prepare the data for correlation plot -->
<!-- # Longer format -->
<!-- asv_vegdist <- as.matrix(vegdist(t(asv_matrix), method = "bray")) -->

<!-- asv_long <-  asv_vegdist |> -->
<!--   as_tibble(rownames = "A") |> -->
<!--   pivot_longer(-A, names_to = "B", values_to = "bray_diss") -->

<!-- geo_long <- geo_distm |> -->
<!--   as_tibble(rownames = "A") |> -->
<!--   pivot_longer(-A, names_to = "B", values_to = "geo_dist") -->

<!-- # Merge the two dataframes -->
<!-- asv_geo_matrix_long <- inner_join(asv_long, geo_long, by = c("A", "B")) |> -->
<!--   inner_join(plant_traits |> -->
<!--                dplyr::select(Unique_ID, Site, Species, Elevation_cat), by = c("A" ="Unique_ID")) -->

<!-- # Mantel test -->
<!-- # All data points -->
<!-- set.seed(859) -->
<!-- abund_geo  <- mantel(asv_vegdist, geo_distm, -->
<!--                      method = "spearman",  -->
<!--                      parallel = 8, -->
<!--                      permutations = 999,  -->
<!--                      na.rm = TRUE) -->
<!-- #abund_geo -->

<!-- # Mantel test by species -->
<!-- # M. laciniatus -->

<!-- # Samples with species to subset/filter matrices downstream -->
<!-- # M. laciniatus -->
<!-- lac_names_rfy <- plant_traits |> -->
<!--   slice(1:157) |> # Only selecting observations with ASV data  -->
<!--   filter(Unique_ID %in% final_names_methodB, -->
<!--     Species == "M. laciniatus") |> -->
<!--   pull(Unique_ID)  -->

<!-- # Subset the data -->
<!-- lac_mantel  <- mantel(asv_long |> # Subset the data -->
<!--                        filter(A %in% lac_names_rfy, B %in% lac_names_rfy) |> -->
<!--                        pivot_wider(names_from = B, values_from = bray_diss) |> -->
<!--                        column_to_rownames(var = "A") |> -->
<!--                        as.matrix(), -->
<!--                      geo_long |> # Subset the data -->
<!--                        filter(A %in% lac_names_rfy, B %in% lac_names_rfy) |> -->
<!--                        pivot_wider(names_from = B, values_from = geo_dist) |> -->
<!--                        column_to_rownames(var = "A") |> -->
<!--                        as.matrix(), -->
<!--                       method = "spearman", permutations = 999, na.rm = TRUE) -->
<!-- #lac_mantel -->

<!-- # M. nasutus -->
<!-- nas_names_rfy <- plant_traits |>  -->
<!--   slice(1:157) |> # Only selecting observations with ASV data  -->
<!--   filter(Unique_ID %in% final_names_methodB, -->
<!--          Species == "M. nasutus") |> -->
<!--   pull(Unique_ID) -->
<!-- nas_mantel  <- mantel(asv_long |> # Subset the data -->
<!--                        filter(A %in% nas_names_rfy, B %in% nas_names_rfy) |> -->
<!--                        pivot_wider(names_from = B, values_from = bray_diss) |> -->
<!--                        column_to_rownames(var = "A") |> -->
<!--                        as.matrix(),  -->
<!--                       geo_long |> # Subset the data -->
<!--                        filter(A %in% nas_names_rfy, B %in% nas_names_rfy) |> -->
<!--                        pivot_wider(names_from = B, values_from = geo_dist) |> -->
<!--                        column_to_rownames(var = "A") |> -->
<!--                        as.matrix(),  -->
<!--                      method = "spearman", permutations = 999, na.rm = TRUE) -->
<!-- #nas_mantel -->

<!-- # M. guttatus -->
<!-- gut_names_rfy <- plant_traits |>  -->
<!--   slice(1:157) |> # Only selecting observations with ASV data  -->
<!--   filter(Unique_ID %in% final_names_methodB, -->
<!--          Species == "M. guttatus") |> -->
<!--   pull(Unique_ID) -->
<!-- # Subset the data -->
<!-- gut_mantel  <- mantel(asv_long |> # Subset the data -->
<!--                        filter(A %in% gut_names_rfy, B %in% gut_names_rfy) |> -->
<!--                        pivot_wider(names_from = B, values_from = bray_diss) |> -->
<!--                        column_to_rownames(var = "A") |> -->
<!--                        as.matrix(), -->
<!--                      geo_long |> # Subset the data -->
<!--                        filter(A %in% gut_names_rfy, B %in% gut_names_rfy) |> -->
<!--                        pivot_wider(names_from = B, values_from = geo_dist) |> -->
<!--                        column_to_rownames(var = "A") |> -->
<!--                        as.matrix(), -->
<!--                      method = "spearman", permutations = 999, na.rm = TRUE) -->
<!-- #gut_mantel -->

<!-- # Visualize the correlation -->
<!-- # Species labels -->
<!-- labels_list <- c("M. laciniatus", "M. nasutus", "M. guttatus") -->
<!-- names(labels_list) <- c("M. laciniatus", "M. nasutus", "M. guttatus") -->

<!-- # Correlation ggplot -->
<!-- mantel_test <- ggplot(asv_geo_matrix_long, aes(y = bray_diss, x = geo_dist)) + -->
<!--   geom_point(aes(color = Species), alpha = 0.5, size = 3) + -->
<!--   geom_smooth(method = "lm", se = TRUE, color = "black") + -->
<!--   # stat_poly_eq(formula = y ~ x,  -->
<!--   #              aes(label = paste("R2 =", abund_geo$statistic,  -->
<!--   #                                ..p.value.label.., -->
<!--   #                                sep = "~~~~")),  -->
<!--   #              parse = TRUE, size = 4, color = "black", label.y = 0.25, label.x = 50000) + -->
<!--   # geom_label(aes(x = 100000, y = 0.25, -->
<!--   #                 label = paste("r = "), sep = "")) + -->
<!--    #stat_regline_equation(label.y = 0.5, label.x = 1900,  -->
<!--                           #aes(label = ..eq.label..), size = rel(4), color = "black") + -->
<!--   #scale_fill_manual(labels = c("*M. laciniatus*","*M. nasutus*", "*M. guttatus*"),  -->
<!--                      #values = met.brewer("Archambault", n = 4, type = "discrete", direction = c(1))) +  -->
<!--   scale_color_manual(values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) +  -->
<!--   labs(y = "Bray Curtis dissimilarity", x = "Geographic distance (m)", col = "") +  -->
<!--   scale_x_continuous(labels = function(x) format(x, scientific = FALSE)) + -->
<!--   theme_lfspp_continuous -->

<!-- #mantel_test -->

<!-- # By species -->
<!-- mantel_species <- ggplot(asv_geo_matrix_long, aes(y = bray_diss, x = geo_dist)) + -->
<!--    geom_jitter(aes(color = Species), alpha = 0.5, size = 3) + -->
<!--    geom_smooth(method = "lm", se = TRUE, color = "black") + -->
<!--    # stat_regline_equation(label.y = 0.25, label.x = "right", -->
<!--    #                        #aes(label = ..adj.rr.label.., ), size = rel(4), color = "black")  -->
<!--    # stat_fit_glance(method = 'lm', -->
<!--    #                 method.args = list(formula = y ~ x), -->
<!--    #                 geom = 'text', -->
<!--    #                 aes(label = paste("p = ", -->
<!--    #                                   signif(..p.value.., digits = 4), -->
<!--    #                                   sep = "")), -->
<!--    #                 color = "black", -->
<!--    #                 label.x = 'right', -->
<!--    #                 label.y = 0.23, size = 4) + -->
<!--    scale_color_manual(values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) + -->
<!--   labs(y = "Bray Curtis dissimilarity", x = "Geographic distance (m)", col = "") + -->
<!--   scale_x_continuous(labels = function(x) format(x, scientific = FALSE)) + -->
<!--   theme_lfspp_continuous + -->
<!--   facet_wrap(~ Species, labeller = labeller(Species = labels_list)) -->
<!-- #mantel_species -->

<!-- # Joining plots -->
<!-- mantel <- ggarrange(mantel_test, "", mantel_species,  -->
<!--                     ncol = 1, nrow = 3,  -->
<!--                     widths = c(1, 0.1, 1), -->
<!--                     heights = c(1, 0.1, 1), -->
<!--                     labels = c("A", "B"), -->
<!--                     common.legend = T, legend = "bottom") -->

<!-- mantel -->
<!-- ggsave(file.path(path, "figures/figure5.png") , plot = mantel, dpi=300, units=c("mm"), width=200, height=250) -->
<!-- ``` -->


# Supplementary Material

## Figure S1

```{r}
#| echo: false
#| eval: true
#| tidy: true
#| message: false
#| fig-width: 6
#| fig-height: 6
#| label: trait_correlation
#| fig-cap: "Correlation matrix of log-transformed leaf functional traits by host species. The plot is based on the Spearman's rho. Significance levels are represented by ns (not significant) and asterisks [p < 0.05 (*), p < 0.01 (**), p < 0.001 (***), and p < 0.0001 (****)]."

t4 <- trans_env$new(dataset = micro_psclean, env_cols = c(5,14:18))

t4gg <- t4$cal_autocor(group = "Species", upper = list(continuous = GGally::wrap("cor", method= "spearman"))) + 
  theme(
    legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "bold", size = 10),
         panel.border = element_rect(linetype = "blank", fill = NA)) +
  scale_fill_manual(values = met.brewer("Isfahan2", n = 3, type = "discrete", direction = c(-1))) +
  scale_color_manual(values = met.brewer("Isfahan2", n = 3, type = "discrete", direction = c(-1)))

t4gg
ggplot2::ggsave(file.path(path, "figures/supp_fig1.png") , plot = t4gg, dpi=300, units=c("mm"), width=300, height=300)
```

## Figure S2

```{r, supp_fig8}
#| echo: false
#| eval: true
#| tidy: true
#| message: false
#| fig-width: 6
#| fig-height: 6
#| label: heatmap
#| fig-cap: "Heatmap of the top 10 most abundant genera in the dataset. The heatmap shows the relative abundance of the top 10 most abundant genera in the dataset. The heatmap is faceted by host species and elevation category."

# Plot with micro_psclean
t2 <- trans_abund$new(dataset = micro_psclean, taxrank = "Genus", ntaxa = 10)
t2gg <- t2$plot_heatmap(facet = c("Species", "Elevation_cat"), xtext_keep = FALSE, withmargin = FALSE) + theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "bold.italic", size = 12),
         panel.border = element_rect(linetype = "blank", fill = NA),
         axis.text.x = element_blank())

#t2gg



r2 <- trans_abund$new(dataset = micro_rarefied_ps, taxrank = "Genus", ntaxa = 10)
r2gg <- r2$plot_heatmap(facet = c("Species", "Elevation_cat"), xtext_keep = FALSE, withmargin = FALSE) + theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "bold.italic", size = 12),
         panel.border = element_rect(linetype = "blank", fill = NA),
         axis.text.x = element_blank())

#r2gg

# Joined heatplots
heatplots <- ggarrange(t2gg, r2gg, ncol = 1, nrow = 2, 
                           common.legend = TRUE, 
                           legend = "bottom",
                           labels = c("A", "B"),
                           heights = c(1, 1))
heatplots

# Save the plot
ggplot2::ggsave(filename = file.path(path, "figures/supp_fig2.png"), plot = heatplots, dpi=300, units=c("mm"), width=300, height=250)
```





## Table 1

```{r, supp_table1}
# Sites and Species sampled
leaf_traits_noB |>
  group_by(Site,Species, Longitude, Latitude) |>
  summarise(n = as.integer(n()/3))|> # Dividing by 3 due to replicate measurements of each sample
  pivot_wider(names_from = Species, values_from = n)|>
  knitr::kable(caption = "Table 1: Number of individuals collected per population/site and species.")
```

## Table 2

```{r, supp_table}
phyloseq_ntaxa_by_tax(
  ps_clean_3,
  TaxRank ="Phylum",
  relative = F,
  add_meta_data = T
) |>
  as.data.frame() |>
  mutate(sum = sum(N.OTU),
          Phylum = str_remove(Phylum, "^.*?(_|-)")) |>
  group_by(Species, Phylum) |>
  summarise(Ocurrance = n()) |>
  knitr::kable(caption = "Table 2: Prevalence of phyla in samples per species.")
```

## Supplementary methods

### Illumina TruSeq adapters for ITS sequencing

The modified primers for the first PCR (adapter ligation and ITS1 amplification) were as follows: 5’-CAC TCT TTC CCT ACA CGA CGC TCT TCC GAT CTC TTG GTC ATT TAG AGG AAG TAA-3’ (forward) and 5’-GTG ACT GGA GTT CAG ACG TGT GCT CTT CCG ATC TGC TGC GTT CTT CAT CGA TGC-3’ (reverse).

See [@gardes1993] and [@inbook] for more details.

### IDT BestRAD barcodes and *i5* custom oligos

####BestRAD adaptors:
Top oligo 
Anatomy: biotin spacer SbfI barcode overhang 
Sequence: /5Biosg/GTACGT CCTGCAGG NNNNNNN TGCA 
Bottom oligo 
Sequence: /5Phos/NNNNNNN CCTGCAGG ACGTAC 


#### BestRAD *i5*

5'-AAT GAT ACG GCG ACC ACC GAG ATC TAC ACN NNN NNN NAC ACT CTT TCC CTA CAC GAC GCT CTT CCG ATC*T-3’




```{r, supp_table2}
